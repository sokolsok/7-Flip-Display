{"version":3,"file":"js/app.30617e06.js","mappings":"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","sources":["webpack://7_flip_display/./src/assets/ sync ^\\.\\/.*\\.png$","webpack://7_flip_display/./src/components/UpdateCheck.vue","webpack://7_flip_display/./src/components/UpdateCheck.vue?92be","webpack://7_flip_display/./src/components/WifiConfig.vue","webpack://7_flip_display/./src/components/WifiConfig.vue?1743","webpack://7_flip_display/./src/components/MqttData.vue","webpack://7_flip_display/./src/components/MqttData.vue?0fb8","webpack://7_flip_display/./src/components/SingleDisplay.vue","webpack://7_flip_display/./src/components/SingleDisplay.vue?3f42","webpack://7_flip_display/./src/components/Display.vue","webpack://7_flip_display/./src/components/Display.vue?d54f","webpack://7_flip_display/./src/components/TimeMode.vue","webpack://7_flip_display/./src/components/TimeMode.vue?311a","webpack://7_flip_display/./src/components/GeneralApi.vue","webpack://7_flip_display/./src/components/GeneralApi.vue?393b","webpack://7_flip_display/./src/components/SettingsModal.vue","webpack://7_flip_display/./src/components/SettingsModal.vue?2f47","webpack://7_flip_display/./src/components/Mode.vue","webpack://7_flip_display/./src/components/Mode.vue?51e2","webpack://7_flip_display/./src/components/Footer.vue","webpack://7_flip_display/./src/components/Footer.vue?7cca","webpack://7_flip_display/./src/App.vue","webpack://7_flip_display/./src/App.vue?7ccd","webpack://7_flip_display/./src/main.js","webpack://7_flip_display/webpack/bootstrap","webpack://7_flip_display/webpack/runtime/chunk loaded","webpack://7_flip_display/webpack/runtime/compat get default export","webpack://7_flip_display/webpack/runtime/define property getters","webpack://7_flip_display/webpack/runtime/global","webpack://7_flip_display/webpack/runtime/hasOwnProperty shorthand","webpack://7_flip_display/webpack/runtime/publicPath","webpack://7_flip_display/webpack/runtime/jsonp chunk loading","webpack://7_flip_display/webpack/startup"],"sourcesContent":["var map = {\n\t\"./blank.png\": 3228,\n\t\"./colon.png\": 651,\n\t\"./dash.png\": 1136,\n\t\"./display.png\": 2912,\n\t\"./dot.png\": 5583,\n\t\"./gear.png\": 6709,\n\t\"./gear_2.png\": 7014,\n\t\"./information-icon.png\": 9156,\n\t\"./plus.png\": 528,\n\t\"./segment-h.png\": 8030,\n\t\"./segment-v.png\": 9376,\n\t\"./space.png\": 4208,\n\t\"./ss4h_logo.png\": 6562\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 715;","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <div class=\"update-check\">\r\n      <h3>Versions</h3>\r\n      <div class=\"label\">\r\n        <p>\r\n          Firmware:\r\n          {{ installedFirmwareVersion }}\r\n          <span\r\n            v-if=\"firmwareState === 'update'\"\r\n            style=\"color: green\"\r\n          >({{ availableFirmwareVersion }})</span>\r\n          <span\r\n            v-else-if=\"firmwareState === 'offline'\"\r\n            style=\"color: red\"\r\n          >(N/A)</span>\r\n          |\r\n          Web App:\r\n          {{ installedWebAppVersion }}\r\n          <span\r\n            v-if=\"webAppState === 'update'\"\r\n            style=\"color: green\"\r\n          >({{ availableWebAppVersion }})</span>\r\n          <span\r\n            v-else-if=\"webAppState === 'offline'\"\r\n            style=\"color: red\"\r\n          >(N/A)</span>\r\n        </p>\r\n      </div>\r\n\r\n      <div v-if=\"!showProgress\">\r\n        <button v-if=\"updateAvailable\" @click=\"startUpdate\">UPDATE AVAILABLE</button>\r\n      </div>\r\n\r\n      <div  class=\"progress-container\" v-if=\"showProgress\">\r\n        <div class=\"label\">{{ updateLabel }}</div>\r\n          <div class=\"progress-wrapper\">\r\n            <progress max=\"100\" :value=\"progress\"></progress>\r\n            <div class=\"progress-percent\">{{ progress }}%</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref, onMounted } from 'vue';\r\n\r\n  // Reactive state variables\r\n  const installedFirmwareVersion = ref('');\r\n  const installedWebAppVersion = ref('');\r\n  const availableFirmwareVersion = ref('');\r\n  const availableWebAppVersion = ref('');\r\n  const updateAvailable = ref(false);\r\n  const firmwareState = ref(''); // '', 'update', 'offline'\r\n  const webAppState = ref(''); // '', 'update', 'offline'\r\n  const updateLabel = ref('');\r\n  const progress = ref(0);\r\n  const showProgress = ref(false);\r\n  const message = ref('');\r\n  const updateInProgress = ref(false)\r\n\r\n  const emit = defineEmits(['close'])\r\n\r\n  function closeModal(e) {\r\n      emit('close')\r\n    }\r\n\r\n  // Function to fetch versions from ESP32\r\n  async function fetchInstalledVersions() {\r\n    try {\r\n      const response = await fetch('/api/v1/versions');\r\n      //const response = await fetch('http://localhost:3000/versions');\r\n      const data = await response.json();\r\n      installedFirmwareVersion.value = data.versions.firm_version;\r\n      installedWebAppVersion.value = data.versions.web_app_version;\r\n    } catch (error) {\r\n      message.value = 'Error fetching installed versions';\r\n      console.error('Error fetching installed versions:', error);\r\n    }\r\n  }\r\n\r\n  // Function to fetch available versions from external OTA server\r\n  async function fetchAvailableVersions() {\r\n    try {\r\n      const response = await fetch('https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/version.json');\r\n      const data = await response.json();\r\n      availableFirmwareVersion.value = data.firmware_version;\r\n      availableWebAppVersion.value = data.web_app_version;\r\n    } catch (error) {\r\n      firmwareState.value = 'offline';\r\n      webAppState.value = 'offline';\r\n      return;\r\n    }\r\n    firmwareState.value = installedFirmwareVersion.value !== availableFirmwareVersion.value ? 'update' : '';\r\n    webAppState.value = installedWebAppVersion.value !== availableWebAppVersion.value ? 'update' : '';\r\n\r\n    updateAvailable.value = firmwareState.value === 'update' || webAppState.value === 'update';\r\n  }\r\n\r\n  // Function to check if an update is needed\r\n  function checkForUpdate() {\r\n    // Compare installed and available versions\r\n    if (\r\n      (installedFirmwareVersion.value !== availableFirmwareVersion.value ||\r\n      installedWebAppVersion.value !== availableWebAppVersion.value) && \r\n      (firmwareState.value !== 'offline' && \r\n      webAppState.value !== 'offline')\r\n    ) {\r\n      updateAvailable.value = true;\r\n    } else {\r\n      updateAvailable.value = false;\r\n    }\r\n  }\r\n\r\n  // Function to start progress polling\r\n  let progressInterval = null;\r\n  function startProgressPolling() {\r\n    progressInterval = setInterval(async () => {\r\n      try {\r\n        const response = await fetch('/api/v1/ota/progress');\r\n        const data = await response.json();\r\n        progress.value = data.progress;\r\n\r\n        if (progress.value > 0 && !updateInProgress.value) {\r\n          updateInProgress.value = true;\r\n        }\r\n\r\n        if (updateInProgress.value && progress.value === 0) {\r\n          clearInterval(progressInterval);\r\n          updateInProgress.value = false;\r\n          window.location.reload(); \r\n        }\r\n      } catch (error) {\r\n        console.error('Error polling OTA progress:', error);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  // Function to initiate OTA update based on version differences\r\n  async function startUpdate() {\r\n    showProgress.value = true;\r\n    progress.value = 0;\r\n\r\n    // Determine which components need update\r\n    const updateFirmware = installedFirmwareVersion.value !== availableFirmwareVersion.value;\r\n    const updateWebApp = installedWebAppVersion.value !== availableWebAppVersion.value;\r\n\r\n    // If both updates are needed, call combined endpoint\r\n    if (updateFirmware && updateWebApp) {\r\n      updateLabel.value = 'Updating Web-App and Firmware...';\r\n      try {\r\n        const response = await fetch('/api/v1/ota/both', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            firmware_url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/firmware_v${availableFirmwareVersion.value}.bin`,\r\n            web_app_url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/web_app_v${availableWebAppVersion.value}.bin`\r\n          })\r\n        });\r\n        const text = await response.text();\r\n        message.value = text;\r\n        startProgressPolling();\r\n      } catch (error) {\r\n        message.value = 'Error starting combined OTA update';\r\n        console.error('Combined OTA error:', error);\r\n      }\r\n    } else if (updateFirmware) {\r\n      // Only firmware update is needed\r\n      updateLabel.value = 'Updating firmware...';\r\n      try {\r\n        const response = await fetch('/api/v1/ota/firmware', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/firmware_v${availableFirmwareVersion.value}.bin`\r\n          })\r\n        });\r\n        const text = await response.text();\r\n        message.value = text;\r\n        startProgressPolling();\r\n      } catch (error) {\r\n        message.value = 'Error starting firmware OTA update';\r\n        console.error('Firmware OTA error:', error);\r\n      }\r\n    } else if (updateWebApp) {\r\n      // Only web app update is needed\r\n      updateLabel.value = 'Updating Web-App...';\r\n      try {\r\n        const response = await fetch('/api/v1/ota/web_app', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/web_app_v${availableWebAppVersion.value}.bin`\r\n          })\r\n        });\r\n        const text = await response.text();\r\n        message.value = text;\r\n        startProgressPolling();\r\n      } catch (error) {\r\n        message.value = 'Error starting Web-App OTA update';\r\n        console.error('Web-App OTA error:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  onMounted(async () => {\r\n    await fetchInstalledVersions();\r\n    await fetchAvailableVersions();\r\n    console.log(installedFirmwareVersion.value, availableFirmwareVersion.value, installedWebAppVersion.value, availableWebAppVersion.value);\r\n    checkForUpdate();\r\n  });\r\n</script>\r\n  \r\n<style scoped>\r\n.backdrop{\r\n    top: 0;\r\n    position: fixed;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.update-check {\r\n  max-width: 420px;\r\n  margin: 150px auto;\r\n  background: white;\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.label {\r\n  color: #333;\r\n  display: inline-block;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n\r\nh3 {\r\n      color: #333;\r\n      margin: 0 0 5px;\r\n      font-size: 0.9em;\r\n      text-transform: uppercase;\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n    }\r\n\r\nbutton {\r\n  background: #40464e;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  margin-top: 16px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.progress-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\nprogress {\r\n  width: 390px;\r\n  height: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n}\r\n\r\n/* Chrome, Safari, Opera */\r\nprogress::-webkit-progress-bar {\r\n  background-color: #e6e6e6;\r\n  border-radius: 10px;\r\n}\r\n\r\nprogress::-webkit-progress-value {\r\n  background-color: #333;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Firefox */\r\nprogress::-moz-progress-bar {\r\n  background-color: #333;\r\n  border-radius: 10px;\r\n}\r\n</style>  ","import script from \"./UpdateCheck.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateCheck.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateCheck.vue?vue&type=style&index=0&id=6b54d0c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b54d0c6\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <div class=\"wifi-config\">\r\n      <h3>Wi-Fi Configuration</h3>\r\n      <div>\r\n        <label>Current Mode: {{ mode }}</label>\r\n      </div>\r\n      <div class=\"wifi-mode\">\r\n        <input type=\"radio\" id=\"ap\" value=\"AP\" v-model=\"selectedMode\">\r\n        <label for=\"ap\">Access Point</label>\r\n        <br/>\r\n        <input type=\"radio\" id=\"sta\" value=\"STA\" v-model=\"selectedMode\">\r\n        <label for=\"sta\">Wi-Fi Client</label>\r\n      </div>\r\n      <div v-if=\"selectedMode === 'STA'\">\r\n        <div>\r\n          <br>\r\n          <label for=\"ssid\">SSID:</label>\r\n          <input type=\"text\" id=\"ssid\" v-model=\"ssid\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" />\r\n        </div>\r\n      </div>\r\n      <button @click=\"updateConfig\">SAVE</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue'\r\n  \r\n  // Reactive variables for current mode, selected mode, SSID and password\r\n  const mode = ref('')\r\n  const selectedMode = ref('AP')\r\n  const ssid = ref('')\r\n  const password = ref('')\r\n\r\n  const emit = defineEmits(['close'])\r\n\r\n  function closeModal(e) {\r\n    emit('close')\r\n  }\r\n  \r\n  // Function to fetch current configuration from the REST API endpoint GET /api/v1/mode\r\n  async function fetchConfig() {\r\n    try {\r\n      const response = await fetch('/api/v1/mode')\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        mode.value = data.mode\r\n        selectedMode.value = data.mode\r\n        ssid.value = data.ssid || ''\r\n        // For security reasons, the password is not returned by the API; leave it empty\r\n        password.value = ''\r\n      } else {\r\n        console.error('Failed to fetch configuration')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching configuration:', error)\r\n    }\r\n  }\r\n  \r\n  // Function to update configuration via POST /api/v1/mode.\r\n  // In STA mode, the SSID and password are included in the payload.\r\n  async function updateConfig() {\r\n    const payload = {\r\n      mode: selectedMode.value\r\n    }\r\n    if (selectedMode.value === 'STA') {\r\n      payload.ssid = ssid.value\r\n      payload.password = password.value\r\n    }\r\n    try {\r\n      const response = await fetch('/api/v1/mode', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      })\r\n      if (response.ok) {\r\n        const message = await response.text()\r\n        alert(message)\r\n      } else {\r\n        alert('Failed to update configuration')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating configuration:', error)\r\n      alert('Error updating configuration')\r\n    }\r\n  }\r\n  \r\n  // On component mount, fetch the current configuration\r\n  onMounted(() => {\r\n    fetchConfig()\r\n  })\r\n  </script>\r\n  \r\n  <style scoped>\r\n    .backdrop{\r\n        top: 0;\r\n        position: fixed;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    label {\r\n        color: #333;\r\n        /* display: inline-block; */\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n    .wifi-config {\r\n        max-width: 420px;\r\n        margin: 150px auto;\r\n        background: white;\r\n        /* text-align: center; */\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    h3 {\r\n      color: #333;\r\n      margin: 0 0 15px;\r\n      font-size: 0.9em;\r\n      text-transform: uppercase;\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n    }\r\n    input[type=\"radio\"] {\r\n        display: inline-block;\r\n        accent-color: #333;\r\n        width: 16px;\r\n        margin: 5px 10px 0 0;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n    button {\r\n      background: #333;\r\n      border: 0;\r\n      padding: 10px 20px;\r\n      margin-top: 20px;\r\n      color: white;\r\n      border-radius: 20px;\r\n      cursor: pointer;\r\n      font-size: 0.7em;\r\n      text-transform: uppercase;\r\n    }\r\n  </style>\r\n  ","import script from \"./WifiConfig.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WifiConfig.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WifiConfig.vue?vue&type=style&index=0&id=73e84a3d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73e84a3d\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <form @submit.prevent=\"saveConfig\">\r\n\r\n      <h3>MQTT Configuration</h3>\r\n\r\n      <div>\r\n        <input type=\"checkbox\" @input=\"onInputChange\" id=\"enabled\" v-model=\"config.enabled\" />\r\n        <label for=\"enabled\">Enable MQTT</label>\r\n      </div>\r\n\r\n      <div .class=\"settings\" v-if=\"config.enabled === true\">\r\n        <div>\r\n          <br>\r\n          <label>Broker Address:</label>\r\n          <input type=\"text\" @input=\"onInputChange\" id=\"broker\" v-model=\"config.broker\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Port number:</label>\r\n          <input type=\"number\" @input=\"onInputChange\" id=\"port\" v-model.number=\"config.port\"/>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Login:</label>\r\n          <input type=\"text\" @input=\"onInputChange\" id=\"login\" v-model=\"config.login\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Password:</label>\r\n          <input type=\"password\" @input=\"onInputChange\" id=\"password\" v-model=\"config.password\" />\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" v-if=\"showSaveButton === true\">{{ SaveButtonLabel }}</button>\r\n      \r\n    </form>\r\n  </div>\r\n\r\n</template>\r\n  \r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n  \r\n  // Configuration object\r\n  const config = ref({\r\n    enabled: false,\r\n    broker: '',\r\n    port: '',\r\n    login: '',\r\n    password: '',\r\n  })\r\n\r\n  const showSaveButton = ref(false);\r\n  const SaveButtonLabel = ref('SAVE');\r\n  \r\n  // Message to display feedback\r\n  const message = ref('')\r\n\r\n  const emit = defineEmits(['close'])\r\n\r\n  function closeModal(e) {\r\n    emit('close')\r\n  }\r\n  \r\n  // Fetch current MQTT configuration from REST endpoint\r\n  const fetchConfig = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/mqtt')\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch configuration')\r\n      }\r\n      const data = await response.json()\r\n      config.value.enabled = data.enabled\r\n      config.value.broker = data.broker\r\n      config.value.port = data.port\r\n      config.value.login = data.login\r\n      config.value.password = data.password\r\n    } catch (error) {\r\n      message.value = error.message\r\n    }\r\n  }\r\n\r\n  const onInputChange = () => {\r\n      showSaveButton.value = true\r\n  }\r\n  \r\n  // Save configuration by sending POST request to REST endpoint\r\n  const saveConfig = async () => {\r\n    try {\r\n      const payload = {\r\n        enabled: config.value.enabled,\r\n        host: config.value.broker,\r\n        port: config.value.port,\r\n        login: config.value.login,\r\n        password: config.value.password,\r\n      }\r\n      const response = await fetch('/api/v1/mqtt', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      })\r\n      if (!response.ok) {\r\n        const errText = await response.text()\r\n        throw new Error(errText || 'Failed to save configuration')\r\n      }\r\n      message.value = 'Configuration saved successfully'\r\n      SaveButtonLabel.value = 'SAVED'\r\n    } catch (error) {\r\n      message.value = error.message\r\n    }\r\n  }\r\n  \r\n  onMounted(() => {\r\n    fetchConfig()\r\n  })\r\n  </script>\r\n  \r\n  <style scoped>\r\n      .backdrop{\r\n        top: 0;\r\n        position: fixed;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    form {\r\n        max-width: 420px;\r\n        margin: 150px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    h3 {\r\n      color: #333;\r\n      margin: 0 0 15px;\r\n      font-size: 0.9em;\r\n      text-transform: uppercase;\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n    }\r\n    label {\r\n        color: #333;\r\n        display: inline-block;\r\n        margin: 5px 0 0px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select {\r\n        display: inline-block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border: 1px solid #ddd;\r\n        accent-color: #333;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: relative;\r\n        top: 3px;\r\n    }\r\n    button {\r\n      background: #333;\r\n      border: 0;\r\n      padding: 10px 20px;\r\n      margin-top: 20px;\r\n      color: white;\r\n      border-radius: 20px;\r\n      cursor: pointer;\r\n      font-size: 0.7em;\r\n      text-transform: uppercase;\r\n    }\r\n    .submit {\r\n        text-align: center;\r\n        cursor: pointer;\r\n    }\r\n  </style>\r\n  ","import script from \"./MqttData.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MqttData.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MqttData.vue?vue&type=style&index=0&id=2ffa0790&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ffa0790\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"display-container\">\r\n    <!-- Display background image -->\r\n    <img :src=\"require('@/assets/display.png')\" alt=\"Display background\" />\r\n\r\n    <!-- Render clickable hotspot for each segment -->\r\n    <div\r\n      v-for=\"segment in segmentsConfig\"\r\n      :key=\"segment.name\"\r\n      class=\"segment-container\"\r\n      :style=\"{\r\n        top: segment.top,\r\n        left: segment.left,\r\n        width: segment.width,\r\n        height: segment.height\r\n      }\"\r\n      @click.stop=\"toggleSegment(segment.name)\"\r\n    >\r\n      <!-- If the segment is active, overlay the active segment image.\r\n            Use horizontal image for segments with rotation 0 and vertical image for others.\r\n            No CSS transform is applied since the image is pre-oriented. -->\r\n            <img\r\n              v-if=\"activeSegments[segment.name]\"\r\n              :src=\"segment.rotation === 0 ? require('@/assets/segment-h.png') : require('@/assets/segment-v.png')\"\r\n              alt=\"Active segment\"\r\n              class=\"segment-image\"\r\n            />\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script setup>\r\n  import { reactive, ref } from 'vue'\r\n\r\n  const props = defineProps({\r\n    initialValue: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  })\r\n\r\n  // Define the event emitter for sending updated signal value to the parent component\r\n  const emit = defineEmits(['update-signal']);\r\n  // Reactive variable to store the current signal value\r\n  const SignValue = ref(null);\r\n  \r\n  // Configuration for each segment (A to G)\r\n  // For horizontal segments (rotation === 0) the horizontal image is used.\r\n  // For vertical segments (rotation 90 or -90) the vertical image is used.\r\n  // Adjust the top, left, width, and height values as needed to align with your display graphic.\r\n  const segmentsConfig = [\r\n    { name: 'A', top: '19px',  left: '48px',  width: '115px', height: '38px',  rotation: 0 },\r\n    { name: 'B', top: '48px',  left: '154px', width: '38px',  height: '115px', rotation: 90 },\r\n    { name: 'C', top: '183px', left: '154px', width: '38px',  height: '115px', rotation: 90 },\r\n    { name: 'D', top: '289px', left: '48px',  width: '115px', height: '38px',  rotation: 0 },\r\n    { name: 'E', top: '183px', left: '18px',  width: '38px',  height: '115px', rotation: -90 },\r\n    { name: 'F', top: '48px',  left: '18px',  width: '38px',  height: '115px', rotation: -90 },\r\n    { name: 'G', top: '154px', left: '48px',  width: '115px', height: '38px',  rotation: 0 }\r\n  ]\r\n  \r\n  // Reactive object holding the on/off state for each segment\r\n  // const activeSegments = reactive({\r\n  //   A: false,\r\n  //   B: false,\r\n  //   C: false,\r\n  //   D: false,\r\n  //   E: false,\r\n  //   F: false,\r\n  //   G: false\r\n  // })\r\n  const activeSegments = reactive({\r\n    A: Boolean(props.initialValue & (1 << 0)),\r\n    B: Boolean(props.initialValue & (1 << 1)),\r\n    C: Boolean(props.initialValue & (1 << 2)),\r\n    D: Boolean(props.initialValue & (1 << 3)),\r\n    E: Boolean(props.initialValue & (1 << 4)),\r\n    F: Boolean(props.initialValue & (1 << 5)),\r\n    G: Boolean(props.initialValue & (1 << 6))\r\n  })\r\n\r\n  // Function to handle signal change and emit the updated value automatically\r\n  const onSignalChange = () => {\r\n    emit('update-signal', SignValue.value);\r\n  };\r\n  \r\n  // Function to toggle the state of a segment (on/off)\r\n  function toggleSegment(segmentName) {\r\n    activeSegments[segmentName] = !activeSegments[segmentName]\r\n\r\n    let value = 0;\r\n    if (activeSegments.A) value |= 1 << 0; // Segment A - LSB\r\n    if (activeSegments.B) value |= 1 << 1;\r\n    if (activeSegments.C) value |= 1 << 2;\r\n    if (activeSegments.D) value |= 1 << 3;\r\n    if (activeSegments.E) value |= 1 << 4;\r\n    if (activeSegments.F) value |= 1 << 5;\r\n    if (activeSegments.G) value |= 1 << 6; // Segment G - bit 6\r\n\r\n    SignValue.value = value;\r\n    onSignalChange();\r\n    console.log(SignValue.value)\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Container for the display; uses relative positioning for overlaying segments */\r\n  .display-container {\r\n    position: relative;\r\n    width: 210px;   /* Width of display-off-v2.png */\r\n    height: 346px;  /* Height of display-off-v2.png */\r\n  }\r\n  \r\n  /* Styling for the base display image */\r\n  .base-display {\r\n    width: 100%;\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  \r\n  /* Container for each clickable segment hotspot */\r\n  .segment-container {\r\n    position: absolute;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* Styling for the active segment image */\r\n  .segment-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none; /* Ensure click is handled by the container */\r\n  }\r\n  </style>\r\n  ","import script from \"./SingleDisplay.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SingleDisplay.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SingleDisplay.vue?vue&type=style&index=0&id=4f7e0da8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4f7e0da8\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"display-wrapper\" ref=\"containerRef\">\r\n    <!-- Inline container for displays and inline separators -->\r\n    <div class=\"display-inline\" v-if=\"DisplayCount > 0\">\r\n      <template v-for=\"index in displayIndices\" :key=\"index\">\r\n        <!-- Single display component with update-signal event handler -->\r\n        <SingleDisplay :initialValue=\"getInitialValueForDisplay(index)\" @update-signal=\"handleUpdateSignal(index, $event)\" />\r\n        <!-- Render inline separator if not the last display and if the separator is not 'plus' -->\r\n        <img\r\n          v-if=\"index < DisplayCount && separators[index - 1] !== 'plus'\"\r\n          :src=\"require(`@/assets/${separators[index - 1]}.png`)\"\r\n          alt=\"separator\"\r\n          class=\"inline-separator\"\r\n          @click=\"separatorClicked(index - 1)\"\r\n        />\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Overlay plus icons rendered on top of displays (only when separator === 'plus') -->\r\n    <div class=\"plus-overlay\" v-if=\"DisplayCount > 0\">\r\n      <template v-for=\"(sep, index) in separators\" :key=\"'overlay-' + index\">\r\n        <img\r\n          v-if=\"sep === 'plus'\"\r\n          :src=\"require(`@/assets/plus.png`)\"\r\n          alt=\"plus\"\r\n          class=\"plus-icon\"\r\n          :style=\"plusStyle(index)\"\r\n          @click.stop=\"openContextMenu($event, index)\"\r\n        />\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Context menu for selecting a separator -->\r\n    <div\r\n      v-if=\"contextMenu.visible\"\r\n      class=\"context-menu\"\r\n      :style=\"{ top: contextMenu.y + 'px', left: contextMenu.x + 'px' }\"\r\n    >\r\n      <div\r\n        v-for=\"option in options\"\r\n        :key=\"option\"\r\n        class=\"context-menu-option\"\r\n        @click=\"selectSeparator(option)\"\r\n      >\r\n        {{ option }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Optional loading state -->\r\n    <div v-if=\"DisplayCount === 0\">\r\n      Loading...\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted } from 'vue';\r\nimport SingleDisplay from './SingleDisplay.vue'; // Importing the 7-segment display component\r\n\r\n// Reference to the main container for converting viewport coordinates to relative coordinates\r\nconst containerRef = ref(null);\r\n\r\n// Reactive variable for JSON settings fetched from the server\r\nconst jsonSettings = ref(null);\r\n\r\n// Reactive variable for total number of displays (DisplayCount)\r\nconst DisplayCount = ref(0);\r\n\r\n// Reactive array for separators between displays (length = DisplayCount - 1)\r\n// Default value for each gap will be 'plus', a boundary between grup is ustawiana na podstawie JSON\r\nconst separators = ref([]);\r\n\r\n// Reactive array to hold the signal values from each SingleDisplay\r\nconst SignValues = ref([]);\r\n\r\n// Available separator options\r\nconst options = ['space', 'blank', 'colon', 'dot', 'dash'];\r\n\r\n// State for the context menu (separator selection)\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0,\r\n  index: null, // Index of the gap currently being edited\r\n});\r\n\r\n//Initial value of the single display\r\nconst getInitialValueForDisplay = (index) => {\r\n  // If the settings have not been fetched yet, return 0\r\n  if (!jsonSettings.value) return 0;\r\n  \r\n  // Convert the display number (1, 2, 3, ...) to a zero-based index\r\n  const idx = index - 1;\r\n  \r\n  // Retrieve all groups and sort them by start_position\r\n  const groups = Object.values(jsonSettings.value.groups)\r\n    .sort((a, b) => a.start_position - b.start_position);\r\n  \r\n  // Iterate over the sorted groups\r\n  for (const group of groups) {\r\n    // If the display index falls within the group's range (start_position to end_position)\r\n    if (idx >= group.start_position && idx <= group.end_position) {\r\n      // Calculate the local display index within the group\r\n      const localIndex = idx - group.start_position;\r\n      // Return the value for the key in the pattern (e.g., \"disp0\", \"disp1\", ...)\r\n      return group.pattern[`disp${localIndex}`] || 0;\r\n    }\r\n  }\r\n  \r\n  // If no matching group is found, return 0 as the default value\r\n  return 0;\r\n};\r\n\r\n// Function to fetch the display settings from the endpoint\r\nasync function fetchDisplaySettings() {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/display_settings');\r\n    //const response = await fetch('/api/v1/config');\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok: ' + response.statusText);\r\n    }\r\n    const data = await response.json();\r\n   \r\n    jsonSettings.value = data;\r\n\r\n    // Calculate total number of displays as: max(end_position) + 1 (positions count od prawej strony)\r\n    const groupValues = Object.values(jsonSettings.value.groups);\r\n    const count = Math.max(...groupValues.map(g => g.end_position)) + 1;\r\n    DisplayCount.value = count;\r\n\r\n    // Initialize separators array with default value 'plus'\r\n    separators.value = Array(count - 1).fill('plus');\r\n\r\n    // For each group (except group0 which always ma separator null), update separator at the group boundary\r\n    // Boundary: gap before the first display of the group (i.e. at index = start_position - 1)\r\n    for (const key in jsonSettings.value.groups) {\r\n      const group = jsonSettings.value.groups[key];\r\n      if (group.start_position > 0 && group.separator) {\r\n        separators.value[group.start_position - 1] = group.separator;\r\n      }\r\n    }\r\n\r\n    console.log(data);\r\n    console.log(data.value);\r\n\r\n    // Initialize SignValues array with null for each display\r\n    SignValues.value = Array(count).fill(null);\r\n\r\n    console.log(SignValues);\r\n    console.log(SignValues.value);\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching display settings:', error);\r\n  }\r\n}\r\n\r\n// Fetch settings on component mount\r\nonMounted(() => {\r\n  fetchDisplaySettings();\r\n});\r\n\r\n// Computed array of display indices [1, 2, ..., DisplayCount]\r\nconst displayIndices = computed(() =>\r\n  Array.from({ length: DisplayCount.value }, (_, i) => i + 1)\r\n);\r\n\r\n// Function to handle update-signal event from SingleDisplay component\r\nfunction handleUpdateSignal(index, newValue) {\r\n  SignValues.value[index - 1] = newValue;\r\n}\r\n\r\n// Close dropdown for given group key when kursor opuszcza obszar menu\r\nconst closeDropdown = (groupKey) => {\r\n  dropdownOpen.value[groupKey] = false\r\n}\r\n\r\n// Function to aggregate SignValues into grouped data based on separators\r\nfunction aggregateDisplaySettings() {\r\n  const totalDisplays = DisplayCount.value;\r\n  const computedGroups = [];\r\n  let currentGroupStart = 0;\r\n\r\n  // Divide into groups – iterate through all gaps between displays\r\n  for (let i = 0; i < totalDisplays - 1; i++) {\r\n    if (separators.value[i] !== 'plus') {\r\n      const groupPattern = {};\r\n      for (let j = currentGroupStart; j <= i; j++) {\r\n        //  If the value is null, get the default value from the original JSON\r\n        const currentValue = SignValues.value[j];\r\n        groupPattern[`disp${j - currentGroupStart}`] = \r\n          currentValue !== null ? currentValue : getInitialValueForDisplay(j + 1);\r\n      }\r\n      computedGroups.push({\r\n        start: currentGroupStart,\r\n        end: i,\r\n        pattern: groupPattern,\r\n        separator: currentGroupStart > 0 ? separators.value[currentGroupStart - 1] : null,\r\n      });\r\n      currentGroupStart = i + 1;\r\n    }\r\n  }\r\n  // Last group – from currentGroupStart to the last display\r\n  const lastPattern = {};\r\n  for (let j = currentGroupStart; j < totalDisplays; j++) {\r\n    const currentValue = SignValues.value[j];\r\n    lastPattern[`disp${j - currentGroupStart}`] = \r\n      currentValue !== null ? currentValue : getInitialValueForDisplay(j + 1);\r\n  }\r\n  computedGroups.push({\r\n    start: currentGroupStart,\r\n    end: totalDisplays - 1,\r\n    pattern: lastPattern,\r\n    separator: currentGroupStart > 0 ? separators.value[currentGroupStart - 1] : null,\r\n  });\r\n\r\n  // Get original groups from JSON and sort them by start_position\r\n  const originalGroups = jsonSettings.value.groups;\r\n  const originalGroupsSorted = Object.entries(originalGroups).sort(\r\n    (a, b) => a[1].start_position - b[1].start_position\r\n  );\r\n\r\n  // Build new groups by comparing boundaries with the original\r\n  const updatedGroups = {};\r\n  for (let i = 0; i < computedGroups.length; i++) {\r\n    const computed = computedGroups[i];\r\n\r\n    // Search for an original group with exactly the same boundaries\r\n    let matchingOriginal = null;\r\n    for (const [key, origGroup] of originalGroupsSorted) {\r\n      if (origGroup.start_position === computed.start && origGroup.end_position === computed.end) {\r\n        matchingOriginal = origGroup;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let newGroup = {};\r\n    if (matchingOriginal) {\r\n      // Group was not changed – copy mode and other settings\r\n      newGroup = { ...matchingOriginal };\r\n      newGroup.start_position = computed.start;\r\n      newGroup.end_position = computed.end;\r\n      newGroup.pattern = computed.pattern;\r\n      newGroup.separator = computed.start > 0 ? separators.value[computed.start - 1] : null;\r\n    } else {\r\n      // Group was modified – set mode to null and remove additional settings\r\n      newGroup = {\r\n        start_position: computed.start,\r\n        end_position: computed.end,\r\n        pattern: computed.pattern,\r\n        separator: computed.start > 0 ? separators.value[computed.start - 1] : null,\r\n        mode: null,\r\n      };\r\n    }\r\n    updatedGroups[`group${i}`] = newGroup;\r\n  }\r\n\r\n  // Final JSON object – \"general\" section remains unchanged (except for updating the number of groups)\r\n  const newJson = {\r\n    general: { ...jsonSettings.value.general, groups: computedGroups.length },\r\n    groups: updatedGroups,\r\n  };\r\n\r\n  return newJson;\r\n}\r\n\r\n// Emit aggregated display data to parent component whenever SignValues or separators change\r\nconst emit = defineEmits(['update-display-data']);\r\nwatch(\r\n  [SignValues, separators],\r\n  () => {\r\n    const aggregatedData = aggregateDisplaySettings();\r\n    emit('update-display-data', aggregatedData);\r\n    //console.log('Emitted aggregated data:', aggregatedData);\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n// Constants for sizes (in pixels)\r\nconst displayWidth = 210;\r\nconst plusWidth = 30;\r\nconst displayHeight = 346; // Height of display component\r\nconst plusTop = (displayHeight - plusWidth) / 2; // Center plus vertically\r\n\r\n// Function to compute inline style for plus icons, considering previous non-plus separators\r\nfunction plusStyle(index) {\r\n  let offset = 0;\r\n  // Sum the widths of all non-plus separators before this gap\r\n  for (let i = 0; i < index; i++) {\r\n    if (separators.value[i] !== 'plus') {\r\n      offset += 106; // width of non-plus separator image\r\n    }\r\n  }\r\n  // Calculate left position:\r\n  // left edge of display (index + 1) = (index + 1) * displayWidth + offset, then subtract half of plusWidth for centering\r\n  const left = ((index + 1) * displayWidth) + offset - plusWidth / 2;\r\n  return { left: left + 'px', top: plusTop + 'px' };\r\n}\r\n\r\n// Function to open context menu when clicking a plus icon\r\nfunction openContextMenu(event, index) {\r\n  event.preventDefault();\r\n  const rect = containerRef.value.getBoundingClientRect();\r\n  contextMenu.value = {\r\n    visible: true,\r\n    x: event.clientX - rect.left,\r\n    y: event.clientY - rect.top,\r\n    index: index,\r\n  };\r\n}\r\n\r\n// Function to update the separator when an option is selected\r\nfunction selectSeparator(option) {\r\n  if (contextMenu.value.index !== null) {\r\n    // Update the separator for the selected gap (triggering inline rendering)\r\n    separators.value[contextMenu.value.index] = option;\r\n  }\r\n  contextMenu.value.visible = false;\r\n  contextMenu.value.index = null;\r\n}\r\n\r\n// Function to handle click on an inline separator (non-plus)\r\n// Clicking on an active separator resets it to 'plus'\r\nfunction separatorClicked(index) {\r\n  separators.value[index] = 'plus';\r\n}\r\n\r\n// Global click listener to close the context menu when clicking outside\r\ndocument.addEventListener('click', () => {\r\n  contextMenu.value.visible = false;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.display-wrapper {\r\n  position: relative;\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Container for displays arranged inline */\r\n.display-inline {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n/* Inline separator (non-plus) styles */\r\n.inline-separator {\r\n  width: 106px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Container for plus icons overlayed on displays */\r\n.plus-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none; /* Only plus icons receive pointer events */\r\n}\r\n\r\n/* Plus icon styles */\r\n.plus-icon {\r\n  position: absolute;\r\n  width: 30px;\r\n  cursor: pointer;\r\n  pointer-events: auto; /* Enable click events on plus icons */\r\n}\r\n\r\n/* Context menu styles */\r\n.context-menu {\r\n  position: absolute;\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  width: 85px;\r\n  color: #222222;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n}\r\n\r\n.context-menu :hover {\r\n  background-color: #b8b8b8;\r\n}\r\n\r\n.context-menu-option {\r\n  padding: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./Display.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Display.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Display.vue?vue&type=style&index=0&id=b12a477a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b12a477a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"time-check\">\r\n    <!-- Dropdown list for selecting the timezone -->\r\n    <label for=\"timezone-select\">Select Timezone: </label>\r\n    <select id=\"timezone-select\" v-model=\"selectedTimezone\" @change=\"updateTime\">\r\n      <option v-for=\"tz in timezones\" :key=\"tz\" :value=\"tz\">\r\n        {{ tz }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- Display the current time data -->\r\n    <div v-if=\"timeData\" class=\"current-time-style\">\r\n      <p>Cuttern time & date:</p>\r\n      <p class=\"time\">\r\n        {{ timeData.hour }}:{{ timeData.minute }}&nbsp;\r\n        {{ timeData.day }}.{{ timeData.month }}.{{ timeData.year }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\n// Reactive state to store the list of timezones\r\nconst timezones = ref([])\r\n// Reactive variable for the selected timezone\r\nconst selectedTimezone = ref('')\r\n// Reactive state to store the current time data\r\nconst timeData = ref(null)\r\n// Timer variable for automatic time refresh\r\nlet timer = null\r\n\r\n// Function to refresh the current time based on the selected timezone (without sending to server)\r\nconst refreshTime = () => {\r\n  // Use Intl.DateTimeFormat to format the date for the selected timezone\r\n  const dtf = new Intl.DateTimeFormat('en-US', {\r\n    timeZone: selectedTimezone.value,\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: false\r\n  })\r\n  // Extract date parts using formatToParts\r\n  const parts = dtf.formatToParts(new Date())\r\n  const data = {}\r\n  parts.forEach(part => {\r\n    if (part.type === 'year') {\r\n      data.year = parseInt(part.value, 10)\r\n    } else if (part.type === 'month') {\r\n      data.month = parseInt(part.value, 10)\r\n    } else if (part.type === 'day') {\r\n      data.day = parseInt(part.value, 10)\r\n    } else if (part.type === 'hour') {\r\n      data.hour = parseInt(part.value, 10)\r\n    } else if (part.type === 'minute') {\r\n      data.minute = parseInt(part.value, 10)\r\n    }\r\n  })\r\n  timeData.value = data\r\n}\r\n\r\n// Function to update time and send the time data when timezone is changed\r\nconst updateTime = async () => {\r\n  // Update the time data using the selected timezone\r\n  refreshTime()\r\n  // Create an array with the time data in the order: [minute, hour, day, month, year]\r\n  const timeArray = [\r\n    timeData.value.minute,\r\n    timeData.value.hour,\r\n    timeData.value.day,\r\n    timeData.value.month,\r\n    timeData.value.year\r\n  ]\r\n  // Send the time data to the REST server endpoint\r\n  await sendTimeData(timeArray)\r\n}\r\n\r\n// Function to send the time data array to the REST server endpoint\r\nconst sendTimeData = async (time) => {\r\n  try {\r\n    const response = await fetch('/api/v1/time', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(time)\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok')\r\n    }\r\n    console.log('Time data sent successfully')\r\n  } catch (error) {\r\n    console.error('Error sending time data:', error)\r\n  }\r\n}\r\n\r\n// On component mount, load the list of timezones, update time for the default selection,\r\n// and set up an interval to refresh the time automatically\r\nonMounted(() => {\r\n  // Try to use Intl.supportedValuesOf if available (experimental)\r\n  if (typeof Intl.supportedValuesOf === 'function') {\r\n    timezones.value = Intl.supportedValuesOf('timeZone')\r\n  } else {\r\n    // Fallback to a static list of common time zones\r\n    timezones.value = [\r\n      'Europe/London',\r\n      'Europe/Amsterdam',\r\n      'America/New_York',\r\n      'Asia/Tokyo',\r\n      'Australia/Sydney'\r\n    ]\r\n  }\r\n  \r\n  // Set default selected timezone if the list is not empty\r\n  if (timezones.value.length > 0) {\r\n    selectedTimezone.value = timezones.value[0]\r\n    updateTime() // Initial update and send data to server\r\n  }\r\n  \r\n  // Set up a timer to refresh the time automatically every second\r\n  timer = setInterval(() => {\r\n    refreshTime()\r\n  }, 1000)\r\n})\r\n\r\n// Clear the timer when the component is unmounted\r\nonUnmounted(() => {\r\n  clearInterval(timer)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.time-check {\r\n  color: #333;\r\n  /* display: inline-block; */\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n.current-time-style {\r\n  display: flex;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n  gap: 10px;\r\n}\r\n.time {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: black;\r\n  vertical-align: middle;\r\n}\r\n</style>\r\n","import script from \"./TimeMode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimeMode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimeMode.vue?vue&type=style&index=0&id=3c0caea2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3c0caea2\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"api-config-component\">\r\n    <div class=\"form-field\">\r\n      <label>Endpoint URL:</label>\r\n      <input v-model=\"endpointUrl\" type=\"url\" placeholder=\"https://api.example.com/endpoint\" />\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>HTTP Method:</label>\r\n      <select v-model=\"httpMethod\">\r\n        <option>GET</option>\r\n        <option>POST</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Headers (JSON):</label>\r\n      <textarea v-model=\"headersText\" placeholder='{\"Authorization\": \"Bearer TOKEN\", \"Accept\": \"application/json\"}'></textarea>\r\n    </div>\r\n    <div class=\"form-field\" v-if=\"httpMethod === 'POST'\">\r\n      <label>Request Body (JSON):</label>\r\n      <textarea v-model=\"requestBody\" placeholder='{\"param\": \"value\"}'></textarea>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Response Format:</label>\r\n      <select v-model=\"responseFormat\">\r\n        <option value=\"json\">JSON</option>\r\n        <option value=\"xml\">XML</option>\r\n        <option value=\"text\">Text</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Data Path:</label>\r\n      <input v-model=\"responseKeyPath\" type=\"text\" placeholder=\"e.g. data.count or price.value\" />\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Polling Interval (minutes):</label>\r\n      <input v-model.number=\"pollInterval\" type=\"number\" min=\"1\" />\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <button @click=\"sendConfigToDevice\">Save</button>\r\n      <button @click=\"testFetch\" :disabled=\"isTesting\">Test Connection</button>\r\n    </div>\r\n    <div class=\"test-result\" v-if=\"testResult !== null\">\r\n      <h4>Test Result:</h4>\r\n      <!-- <pre>{{ testResult }}</pre> -->\r\n      <p>{{ testResult }}</p>\r\n    </div>\r\n    <div class=\"error\" v-if=\"testError\">\r\n      <strong>{{ testError }}</strong>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\n// Definition of reactive state variables for the form\r\nconst endpointUrl   = ref('')         // API URL\r\nconst httpMethod    = ref('GET')      // HTTP Method\r\nconst headersText   = ref('')         // Headers in JSON format (text field)\r\nconst requestBody   = ref('')         // Request body (JSON string for POST)\r\nconst responseFormat = ref('json')    // Response format: 'json' | 'xml' | 'text'\r\nconst responseKeyPath = ref('')       // Key path to the data field\r\nconst pollInterval  = ref(10)         // Polling interval (minutes, default 10)\r\n\r\n// State variables for testing and messages\r\nconst isTesting  = ref(false)         // Flag indicating a test request is in progress\r\nconst testResult = ref(null)          // Stores the test result (retrieved value)\r\nconst testError  = ref('')            // Stores any test error\r\n\r\n// Helper function to extract value from a JSON object by path\r\nfunction getValueByPath(obj, path) {\r\n  if (!path) return obj;\r\n  return path.split('.').reduce((acc, key) => acc && acc[key] !== undefined ? acc[key] : undefined, obj);\r\n}\r\n\r\n// Test function to fetch data from the API\r\nasync function testFetch() {\r\n  testError.value = '';\r\n  testResult.value = null;\r\n  isTesting.value = true;\r\n  try {\r\n    // Prepare fetch options\r\n    const options = { method: httpMethod.value, headers: {} };\r\n    // Headers - parse JSON text into an object (if the field is not empty)\r\n    if (headersText.value) {\r\n      try {\r\n        options.headers = JSON.parse(headersText.value);\r\n      } catch(e) {\r\n        throw new Error('Error parsing headers: ' + e.message);\r\n      }\r\n    }\r\n    // Body for POST\r\n    if (httpMethod.value === 'POST') {\r\n      options.headers['Content-Type'] = 'application/json';\r\n      if (requestBody.value) {\r\n        try {\r\n          options.body = JSON.stringify(JSON.parse(requestBody.value));\r\n        } catch(e) {\r\n          throw new Error('Error parsing request body: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n    // Perform fetch\r\n    const res = await fetch(endpointUrl.value, options);\r\n    if (!res.ok) {\r\n      throw new Error(`Error code ${res.status}`);\r\n    }\r\n    // Read and parse response according to the format\r\n    let data;\r\n    if (responseFormat.value === 'json') {\r\n      data = await res.json();\r\n      // Extract nested value\r\n      data = getValueByPath(data, responseKeyPath.value);\r\n    } else if (responseFormat.value === 'text') {\r\n      data = await res.text();\r\n      // For text there is no key, take the whole content or optionally a simple transformation\r\n      // (responseKeyPath can be ignored or used as e.g. substring/regex - optionally)\r\n    } else if (responseFormat.value === 'xml') {\r\n      const text = await res.text();\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(text, \"application/xml\");\r\n      if (responseKeyPath.value) {\r\n        // Assume a tag name is provided in responseKeyPath for simplicity\r\n        const elem = xmlDoc.getElementsByTagName(responseKeyPath.value)[0];\r\n        data = elem ? elem.textContent : undefined;\r\n      } else {\r\n        // If no specific tag is provided, return the entire XML response as a string\r\n        data = text;\r\n      }\r\n    }\r\n    testResult.value = data;\r\n  } catch (err) {\r\n    testError.value = 'Error: ' + err.message;\r\n  } finally {\r\n    isTesting.value = false;\r\n  }\r\n}\r\n\r\n// Function to send configuration to ESP32\r\nasync function sendConfigToDevice() {\r\n  // Compose configuration object\r\n  let headersObj = {};\r\n  if (headersText.value) {\r\n    try {\r\n      headersObj = JSON.parse(headersText.value);\r\n    } catch(e) {\r\n      alert(\"Headers: invalid JSON format\");\r\n      return;\r\n    }\r\n  }\r\n  let bodyObj = null;\r\n  if (httpMethod.value === 'POST' && requestBody.value) {\r\n    try {\r\n      bodyObj = JSON.parse(requestBody.value);\r\n    } catch(e) {\r\n      alert(\"Body: invalid JSON format\");\r\n      return;\r\n    }\r\n  }\r\n  const configPayload = {\r\n    endpoint: endpointUrl.value,\r\n    method: httpMethod.value,\r\n    headers: headersObj,\r\n    body: bodyObj,\r\n    responseFormat: responseFormat.value,\r\n    responseKeyPath: responseKeyPath.value,\r\n    interval: pollInterval.value\r\n  };\r\n  try {\r\n    const response = await fetch(\"http://esp32.local/api/config\", {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(configPayload)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}`);\r\n    }\r\n    alert(\"Configuration sent successfully.\");\r\n  } catch (err) {\r\n    alert(\"Error sending configuration: \" + err.message);\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.api-config-component {\r\n  max-width: 420px;\r\n  background: white;\r\n  text-align: left;\r\n  border-radius: 10px;\r\n}\r\n\r\nlabel {\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select, textarea {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: 1px solid #ddd;\r\n        /* border-bottom: 1px solid #ddd; */\r\n        color: #555;\r\n    }\r\n    button {\r\n        background: #333;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n.form-field {\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.test-result {\r\n}\r\n\r\n.error {\r\n  color: #ff0062;\r\n  margin-top: 10px;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","import script from \"./GeneralApi.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GeneralApi.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GeneralApi.vue?vue&type=style&index=0&id=0c6bf554&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"backdrop\" @click.self=\"closeModal\">\r\n      <div class=\"modal\">\r\n        <form @submit.prevent=\"save\" v-if=\"mode === 'mqtt'\">\r\n            <h3>MQTT Settings</h3>\r\n            <div class=\"information-style\">\r\n                <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\"/>\r\n                <p>tutaj pisze jakieś podpowidzi i jak działa ten tryb tutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten tryb</p>\r\n            </div>\r\n            <label for=\"topicInput\">Topic:</label>\r\n            <input type=\"text\" id=\"topicInput\" v-model=\"topicValue\" required>\r\n            <button type=\"submit\">SAVE</button>\r\n        </form>\r\n        <form @submit.prevent=\"save\" v-if=\"mode === 'clock'\">\r\n            <h3>Clock Settings</h3>\r\n            <div class=\"information-style\">\r\n                <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\"/>\r\n                <p>tutaj pisze jakieś podpowidzi i jak działa ten tryb tutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten tryb</p>\r\n            </div>\r\n            <TimeMode />\r\n            <button type=\"submit\">SAVE</button>\r\n        </form>\r\n        <form @submit.prevent=\"save\" v-if=\"mode === 'timer'\">\r\n            <h3>Timer Settings</h3>\r\n            <div class=\"information-style\">\r\n                <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\"/>\r\n                <p>tutaj pisze jakieś podpowidzi i jak działa ten tryb tutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten tryb</p>\r\n            </div>\r\n\r\n        </form>\r\n        <form @submit.prevent=\"save\" v-if=\"mode === 'custom-api'\">\r\n            <h3>Custom API (advanced)</h3>\r\n            <div class=\"information-style\">\r\n                <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\"/>\r\n                <p>tutaj pisze jakieś podpowidzi i jak działa ten tryb tutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten trybtutaj pisze jakieś podpowidzi i jak działa ten tryb</p>\r\n            </div>\r\n            <GeneralApi />\r\n        </form>\r\n\r\n        <!-- <h3>{{ title }}</h3> -->\r\n        <!-- <pre>{{ aggregatedData }}</pre> -->\r\n        <!-- <button @click=\"save\">SAVE</button> -->\r\n      </div>\r\n    </div>\r\n</template>\r\n  \r\n<script setup>\r\n  import { defineProps, defineEmits, ref } from 'vue'\r\n  import TimeMode from './TimeMode.vue'\r\n  import GeneralApi from './GeneralApi.vue';\r\n  \r\n  const props = defineProps({\r\n    groupKey: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    mode: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    aggregatedData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  })\r\n  \r\n  const emits = defineEmits(['close', 'save'])\r\n  \r\n  // Reactive variable storing the value entered by the user\r\n  const topicValue = ref('')\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    emits('close')\r\n  }\r\n\r\n  // Save function\r\n  const save = () => {\r\n    if (props.mode === 'mqtt') {\r\n      // List of required keys\r\n      const requiredKeys = ['start_position', 'end_position', 'pattern', 'separator', 'mode']\r\n      // Get group data\r\n      const groupData = props.aggregatedData.groups[props.groupKey]\r\n\r\n      // Remove keys that are not required\r\n      Object.keys(groupData).forEach(key => {\r\n        if (!requiredKeys.includes(key)) {\r\n          delete groupData[key]\r\n        }\r\n      })\r\n\r\n      // Add a new \"topic\" key with the value taken from the input\r\n      groupData.topic = topicValue.value\r\n    }\r\n    // For other modes, appropriate logic can be added here\r\n\r\n    // Emit the save event with updated aggregatedData\r\n    emits('save', props.aggregatedData)\r\n  }\r\n</script>\r\n  \r\n<style scoped>\r\n    .modal {\r\n        width: 400px;\r\n        padding: 20px;\r\n        margin: 100px auto;\r\n        background: rgb(255, 255, 255);\r\n        border-radius: 10px;\r\n        position: relative;\r\n        z-index: 10000;\r\n    }\r\n    .backdrop {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 9999;\r\n    }\r\n    button {\r\n        background: #40464e;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n        cursor: pointer;\r\n        font-size: 0.7em;\r\n        text-transform: uppercase;\r\n    }\r\n    img {\r\n        width: 20px;\r\n        height: auto;\r\n        object-fit: contain;\r\n        margin: 10px 10px 0 10px;\r\n    }\r\n    .information-style {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        color: rgb(0, 0, 0);\r\n        border-radius: 10px;\r\n        font-size: 0.8em;\r\n        background-color: antiquewhite;\r\n    }\r\n    label {\r\n        color: #333;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: 1px solid #9c9c9c;\r\n        color: #383838;\r\n    }\r\n</style>\r\n  ","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=ee832478&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ee832478\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <button class=\"submit\" @click=\"sendAggregatedData\">\r\n              Send\r\n          </button>\r\n    <!-- Common scroll container for both Display and mode panels -->\r\n    <div class=\"scroll-wrapper\">\r\n      <div class=\"combined-content\">\r\n        <!-- Display component container -->\r\n        <div class=\"display-wrapper\">\r\n          <Display @update-display-data=\"handleUpdateDisplayData\" />\r\n        </div>\r\n\r\n        <!-- Mode panels container: arranged horizontally with no wrapping -->\r\n        <div v-if=\"aggregatedData && aggregatedData.groups\" class=\"modes-wrapper\">\r\n          <!-- Iterate over groups using computed groupsList -->\r\n          <div v-for=\"([groupKey, group]) in groupsList\" :key=\"groupKey\" class=\"group-panel\">\r\n            <!-- Mode panel with dropdown and button; width calculated based on number of displays -->\r\n            <div class=\"mode-panel\" :style=\"{ width: groupWidth(group) }\">\r\n              <div class=\"dropdown\">\r\n                <button class=\"dropbtn\" @click=\"toggleDropdown($event, groupKey)\">\r\n                  {{ group.mode || 'none' }}\r\n                </button>\r\n              </div>\r\n              <button class=\"option-btn\" @click=\"handleButtonClick(groupKey, group.mode)\">\r\n                <img :src=\"require('@/assets/gear_2.png')\" class=\"gear-style\"/>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Debug: display aggregated data -->\r\n    <pre>{{ aggregatedData }}</pre>\r\n    <br><br><br>\r\n\r\n    <!-- Teleport dropdown menu to body to always be on top -->\r\n    <teleport to=\"body\">\r\n      <div v-for=\"([groupKey, group]) in groupsList\" :key=\"'dropdown-' + groupKey\">\r\n        <div v-if=\"dropdownOpen[groupKey]\" class=\"dropdown-content-teleport\" :style=\"getDropdownStyle(groupKey)\" @mouseleave=\"closeDropdown(groupKey)\">\r\n          <a v-for=\"mode in modes\" :key=\"mode\" href=\"#\" @click.prevent=\"selectMode(groupKey, mode)\">\r\n            {{ mode }}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </teleport>\r\n  </div>\r\n\r\n  <SettingsModal\r\n      v-if=\"showSettingsModal\"\r\n      :groupKey=\"currentModal.groupKey\"\r\n      :mode=\"currentModal.mode\"\r\n      :aggregatedData=\"aggregatedData\"\r\n      @close=\"showSettingsModal = false\"\r\n      @save=\"handleModalSave\"\r\n    />\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport Display from './Display.vue'\r\nimport SettingsModal from './SettingsModal.vue'\r\n\r\n// Reactive variable to store display configuration data\r\nconst aggregatedData = ref(null)\r\n\r\n// Reactive obiekty do przechowywania stanu dropdownów i ich pozycji (dla każdej grupy)\r\nconst dropdownOpen = ref({})\r\nconst dropdownPosition = ref({})\r\n\r\n// Available modes\r\nconst modes = ['none', 'mqtt', 'timer', 'clock', 'mannual', 'custom-api']\r\n\r\n// Reactive zmienna sterująca widocznością modalu oraz aktualnymi danymi dla modalu\r\nconst showSettingsModal = ref(false)\r\nconst currentModal = ref({ groupKey: null, mode: null })\r\n\r\n// Handle data received from Display component and wrap it as reactive\r\nconst handleUpdateDisplayData = (data) => {\r\n  aggregatedData.value = data\r\n  // Normalize mode: if a group's mode is null, set it to \"none\"\r\n  if (aggregatedData.value && aggregatedData.value.groups) {\r\n    Object.values(aggregatedData.value.groups).forEach((group) => {\r\n      if (group.mode === null) {\r\n        group.mode = 'none'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// Computed property to get an array of [groupKey, group] pairs\r\nconst groupsList = computed(() => {\r\n  if (!aggregatedData.value || !aggregatedData.value.groups) return []\r\n  return Object.entries(aggregatedData.value.groups)\r\n})\r\n\r\n// Calculate the width of a group's panel based on the number of displays (each display is 210px)\r\nconst groupWidth = (group) => {\r\n  const numDisplays = group.end_position - group.start_position\r\n  return (numDisplays + 1) * 210 + 'px'\r\n}\r\n\r\n// Toggle dropdown open/close state for a specific group i oblicz pozycję przycisku\r\nconst toggleDropdown = (event, groupKey) => {\r\n  dropdownOpen.value[groupKey] = !dropdownOpen.value[groupKey]\r\n  if (dropdownOpen.value[groupKey]) {\r\n    const rect = event.target.getBoundingClientRect()\r\n    dropdownPosition.value[groupKey] = {\r\n      top: rect.bottom,\r\n      left: rect.left,\r\n      width: rect.width\r\n    }\r\n  }\r\n}\r\n\r\n// Return computed style for dropdown content based on stored position\r\nconst getDropdownStyle = (groupKey) => {\r\n  const pos = dropdownPosition.value[groupKey] || { top: 0, left: 0, width: 'auto' }\r\n  return {\r\n    position: 'fixed',\r\n    top: pos.top + 'px',\r\n    left: pos.left + 'px',\r\n    width: pos.width + 'px',\r\n    backgroundColor: '#e7e7e7',\r\n    borderRadius: '7px',\r\n    zIndex: 9999,\r\n    color: '#333',\r\n    fontSize: '0.9em',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '1px',\r\n    fontWeight: 'bold'\r\n  }\r\n}\r\n\r\n// Close dropdown for given group key when kursor opuszcza obszar menu\r\nconst closeDropdown = (groupKey) => {\r\n  dropdownOpen.value[groupKey] = false\r\n}\r\n\r\n// Select a mode from the dropdown and close it afterwards\r\nconst selectMode = (groupKey, mode) => {\r\n  aggregatedData.value.groups[groupKey].mode = mode\r\n  dropdownOpen.value[groupKey] = false\r\n\r\n  if(mode != 'none') {\r\n    currentModal.value = { groupKey, mode }\r\n    showSettingsModal.value = true\r\n  }\r\n  console.log(`Mode changed in group ${groupKey}:`, aggregatedData.value.groups[groupKey].mode)\r\n}\r\n\r\n// Handle button click (expand logic as needed)\r\nconst handleButtonClick = (groupKey, mode) => {\r\n\r\n  if(mode != 'none') {\r\n    currentModal.value = { groupKey, mode }\r\n    showSettingsModal.value = true\r\n  }\r\n  console.log('Button clicked for group:', groupKey, mode)\r\n}\r\n\r\nconst handleModalSave = (updatedData) => {\r\n  aggregatedData.value = updatedData\r\n  showSettingsModal.value = false\r\n}\r\n\r\n// Function to send aggregatedData to the ESP32 server\r\nconst sendAggregatedData = async () => {\r\n  if (!aggregatedData.value) {\r\n    alert(\"No configuration data to send.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('/api/v1/config', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(aggregatedData.value),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.text(); // Use text() instead of json()\r\n    console.log('Server response:', result);\r\n    // alert('Configuration sent successfully!');\r\n  } catch (error) {\r\n    console.error('Error sending configuration:', error);\r\n    alert('Failed to send configuration.');\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Common scroll wrapper for both Display and mode panels */\r\n.scroll-wrapper {\r\n  overflow-x: auto; /* Enable horizontal scrolling */\r\n  width: 100%;\r\n  text-align: center; /* Center content */\r\n}\r\n\r\n/* Combined content container with width defined by its children */\r\n.combined-content {\r\n  display: inline-block; /* Shrinks to fit its content, causing overflow when needed */\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Display component container: arranged horizontally with a 106px gap (separator width) */\r\n.display-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 106px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Mode panels container: arranged horizontally with no wrapping and a 106px gap */\r\n.modes-wrapper {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  gap: 106px;\r\n  justify-content: center;\r\n}\r\n\r\n/* Mode panel containing the dropdown and button */\r\n.mode-panel {\r\n  display: flex;           /* Ensure flex layout */\r\n  align-items: top;        /* Vertically align items */\r\n}\r\n\r\n/* Dropdown container */\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n/* Teleportowane rozwijane menu – style dla linków, z cieniem */\r\n.dropdown-content-teleport {\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.dropdown-content-teleport a {\r\n  color: #333;\r\n  padding: 12px 5px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  display: block;\r\n}\r\n\r\n.dropdown-content-teleport a:hover {\r\n  background-color: #a5a5a5;\r\n}\r\n\r\n/* Square button with fixed dimensions */\r\n.option-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: 5px;\r\n  border-radius: 7px;\r\n  border: 3px solid #333;\r\n  border-color: #333;\r\n  background: #d9d5c7;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n}\r\n\r\n.gear-style {\r\n  scale: 0.8;\r\n}\r\n\r\n/* Style the dropdown button */\r\n.dropbtn {\r\n  background-color: #333;\r\n  border-radius: 7px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #ebebeb;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n.dropbtn:hover {\r\n  background: #424242;\r\n}\r\n\r\n.submit {\r\n  float: right;\r\n  width: 200px;\r\n  background: #c02b2b;\r\n  border: 1;\r\n  margin: 3px 3px 70px 0;\r\n  padding: 10px;\r\n  color: white;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1.1em;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.submit:hover {\r\n  background: #d63030;\r\n}\r\n\r\n\r\n</style>\r\n","import script from \"./Mode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Mode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Mode.vue?vue&type=style&index=0&id=35561f3a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-35561f3a\"]])\n\nexport default __exports__","<template>\r\n    <footer class=\"footer\">\r\n      <img src=\"@/assets/ss4h_logo.png\" class=\"logo\" alt=\"LOGO\">\r\n      <p>2025.05</p>\r\n      <p>Created by Sebastian Sokołowski from:</p>   \r\n      <a href=\"https://smartsolutions4home.com\">https://smartsolutions4home.com</a>\r\n    </footer>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'FooterComponent'\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .footer {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #f2f2f2;\r\n    box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    align-items: center; \r\n    justify-content: center;\r\n    color: black;\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n    /* text-transform: uppercase; */\r\n  }\r\n  \r\n  .footer p,\r\n  .footer a {\r\n      margin: 0 5px;\r\n  }\r\n\r\n  .logo {\r\n    scale: 0.5;\r\n    float: left;\r\n    margin-top: 0px;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./Footer.vue?vue&type=template&id=088b96a7&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=088b96a7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-088b96a7\"]])\n\nexport default __exports__","<template>\n  <div class=\"app\">\n    <div class=\"top-bar\">\n      <button class=\"menu-btn\" @click=\"toggleWiFiModal\">\n          Wifi Settings\n      </button>\n      <button class=\"menu-btn\" @click=\"toggleMQTTModal\">\n          MQTT Settings\n      </button>        \n      <button class=\"menu-btn\" @click=\"toggleUpdateModal\">\n          Check for update\n      </button>  \n      <button class=\"menu-btn\" onclick=\"window.open('https://www.smartsolutions4home.com', '_blank')\">\n        Project details\n      </button>    \n      <button class=\"menu-btn\" onclick=\"window.open('https://PayPal.Me/ss4h', '_blank')\">\n          Donate\n      </button>           \n      <Mode />\n    </div>\n\n    <WifiConfig v-if=\"showWiFi === true\" @close=\"toggleWiFiModal\"/>\n    <MqttData  v-if=\"showMQTT === true\" @close=\"toggleMQTTModal\"/> \n    <UpdateCheck  v-if=\"showUpdate === true\" @close=\"toggleUpdateModal\"/> \n\n    <!-- <WifiConfig /> -->\n    <!-- <TimeCheck /> -->\n    <Footer />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport UpdateCheck from './components/UpdateCheck.vue';\nimport WifiConfig from './components/WifiConfig.vue';\nimport MqttData from './components/MqttData.vue';\nimport Mode from './components/Mode.vue';\nimport Footer from './components/Footer.vue';\n\nconst showWiFi = ref(false);\nconst showMQTT = ref(false);\nconst showUpdate = ref(false);\n\nfunction toggleWiFiModal() {\n  showWiFi.value = !showWiFi.value;\n}\nfunction toggleMQTTModal() {\n  showMQTT.value = !showMQTT.value;\n}\nfunction toggleUpdateModal() {\n  showUpdate.value = !showUpdate.value;\n}\n\n</script>\n\n<style>\n#app {\n  padding-bottom: 60px; /* Footer high */\n}\nbody {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin: 0;\n  background: #dee3e9;\n  display: block;\n}\n.menu-btn {\n  float: left;\n  width: auto;\n  height: 40px;\n  background: #d9d5c7;\n  border: 10;\n  border-color: #333;\n  border-radius: 8px;\n  margin: 4px 3px 50px 3px;\n  padding: 8px;\n  color: #333;\n  cursor: pointer;\n  font-size: 1em;\n  font-weight: 550;\n  text-transform: uppercase;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.menu-btn:hover {\n  background: #a5a297;\n}\n\n.top-bar {\n  background-color: #f2f2f2; \n  height: 50px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=830c33c6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_7_flip_display\"] = self[\"webpackChunk_7_flip_display\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9487); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","installedFirmwareVersion","ref","installedWebAppVersion","availableFirmwareVersion","availableWebAppVersion","updateAvailable","firmwareState","webAppState","updateLabel","progress","showProgress","message","updateInProgress","emit","__emit","closeModal","async","fetchInstalledVersions","response","fetch","data","json","value","versions","firm_version","web_app_version","error","console","fetchAvailableVersions","firmware_version","checkForUpdate","progressInterval","startProgressPolling","setInterval","clearInterval","window","location","reload","startUpdate","updateFirmware","updateWebApp","method","headers","body","JSON","stringify","firmware_url","web_app_url","text","url","onMounted","log","__exports__","mode","selectedMode","ssid","password","fetchConfig","ok","updateConfig","payload","alert","config","enabled","broker","port","login","showSaveButton","SaveButtonLabel","onInputChange","saveConfig","host","errText","props","__props","SignValue","segmentsConfig","name","top","left","width","height","rotation","activeSegments","reactive","A","Boolean","initialValue","B","C","D","E","F","G","onSignalChange","toggleSegment","segmentName","displayWidth","plusWidth","displayHeight","containerRef","jsonSettings","DisplayCount","separators","SignValues","options","contextMenu","visible","x","y","index","getInitialValueForDisplay","idx","groups","values","sort","a","b","start_position","group","end_position","localIndex","pattern","fetchDisplaySettings","statusText","groupValues","count","Math","max","g","Array","fill","key","separator","displayIndices","computed","from","length","_","i","handleUpdateSignal","newValue","aggregateDisplaySettings","totalDisplays","computedGroups","currentGroupStart","groupPattern","j","currentValue","push","start","end","lastPattern","originalGroups","originalGroupsSorted","entries","updatedGroups","matchingOriginal","origGroup","newGroup","newJson","general","watch","aggregatedData","deep","plusTop","plusStyle","offset","openContextMenu","event","preventDefault","rect","getBoundingClientRect","clientX","clientY","selectSeparator","option","separatorClicked","document","addEventListener","timezones","selectedTimezone","timeData","timer","refreshTime","dtf","Intl","DateTimeFormat","timeZone","year","month","day","hour","minute","hour12","parts","formatToParts","Date","forEach","part","type","parseInt","updateTime","timeArray","sendTimeData","time","supportedValuesOf","onUnmounted","endpointUrl","httpMethod","headersText","requestBody","responseFormat","responseKeyPath","pollInterval","isTesting","testResult","testError","getValueByPath","obj","path","split","reduce","acc","undefined","testFetch","parse","res","status","parser","DOMParser","xmlDoc","parseFromString","elem","getElementsByTagName","textContent","err","sendConfigToDevice","headersObj","bodyObj","configPayload","endpoint","interval","emits","topicValue","save","requiredKeys","groupData","groupKey","includes","topic","dropdownOpen","dropdownPosition","modes","showSettingsModal","currentModal","handleUpdateDisplayData","groupsList","groupWidth","numDisplays","toggleDropdown","target","bottom","getDropdownStyle","pos","position","backgroundColor","borderRadius","zIndex","color","fontSize","textTransform","letterSpacing","fontWeight","closeDropdown","selectMode","handleButtonClick","handleModalSave","updatedData","sendAggregatedData","result","class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","src","_imports_0","alt","href","render","showWiFi","showMQTT","showUpdate","toggleWiFiModal","toggleMQTTModal","toggleUpdateModal","createApp","App","mount","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","definition","defineProperty","enumerable","get","globalThis","this","Function","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}