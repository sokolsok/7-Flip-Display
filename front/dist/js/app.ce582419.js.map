{"version":3,"file":"js/app.ce582419.js","mappings":"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","sources":["webpack://7_flip_display/./src/assets/ sync ^\\.\\/.*\\.png$","webpack://7_flip_display/./src/components/UpdateCheck.vue","webpack://7_flip_display/./src/components/UpdateCheck.vue?92be","webpack://7_flip_display/./src/components/WifiConfig.vue","webpack://7_flip_display/./src/components/WifiConfig.vue?1743","webpack://7_flip_display/./src/components/Settings.vue","webpack://7_flip_display/./src/components/Settings.vue?b3ff","webpack://7_flip_display/./src/components/SingleDisplay.vue","webpack://7_flip_display/./src/components/SingleDisplay.vue?3f42","webpack://7_flip_display/./src/components/Display.vue","webpack://7_flip_display/./src/components/Display.vue?d54f","webpack://7_flip_display/./src/components/TimeMode.vue","webpack://7_flip_display/./src/components/TimeMode.vue?311a","webpack://7_flip_display/./src/components/GeneralApi.vue","webpack://7_flip_display/./src/components/GeneralApi.vue?393b","webpack://7_flip_display/./src/components/TimerMode.vue","webpack://7_flip_display/./src/components/TimerMode.vue?11ac","webpack://7_flip_display/./src/components/MqttData.vue","webpack://7_flip_display/./src/components/MqttData.vue?0fb8","webpack://7_flip_display/./src/components/SettingsModal.vue","webpack://7_flip_display/./src/components/SettingsModal.vue?2f47","webpack://7_flip_display/./src/components/Mode.vue","webpack://7_flip_display/./src/components/Mode.vue?51e2","webpack://7_flip_display/./src/components/Footer.vue","webpack://7_flip_display/./src/components/Footer.vue?7cca","webpack://7_flip_display/./src/App.vue","webpack://7_flip_display/./src/App.vue?7ccd","webpack://7_flip_display/./src/main.js","webpack://7_flip_display/webpack/bootstrap","webpack://7_flip_display/webpack/runtime/chunk loaded","webpack://7_flip_display/webpack/runtime/compat get default export","webpack://7_flip_display/webpack/runtime/define property getters","webpack://7_flip_display/webpack/runtime/global","webpack://7_flip_display/webpack/runtime/hasOwnProperty shorthand","webpack://7_flip_display/webpack/runtime/publicPath","webpack://7_flip_display/webpack/runtime/jsonp chunk loading","webpack://7_flip_display/webpack/startup"],"sourcesContent":["var map = {\n\t\"./blank.png\": 3228,\n\t\"./colon.png\": 651,\n\t\"./dash.png\": 1136,\n\t\"./display.png\": 2912,\n\t\"./dot.png\": 5583,\n\t\"./gear.png\": 6709,\n\t\"./gear_2.png\": 7014,\n\t\"./information-icon.png\": 9156,\n\t\"./plus.png\": 528,\n\t\"./segment-h.png\": 8030,\n\t\"./segment-v.png\": 9376,\n\t\"./space.png\": 4208,\n\t\"./ss4h_logo.png\": 6562\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 715;","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <div class=\"update-check\">\r\n      <h3>Versions</h3>\r\n      <div class=\"label\">\r\n        <p>\r\n          Firmware:\r\n          {{ installedFirmwareVersion }}\r\n          <span v-if=\"firmwareState === 'update'\" style=\"color: green\">\r\n            ({{ availableFirmwareVersion }})\r\n          </span>\r\n          <span v-else-if=\"firmwareState === 'offline'\" style=\"color: red\">\r\n            (N/A)\r\n          </span>\r\n          |\r\n          Web App:\r\n          {{ installedWebAppVersion }}\r\n          <span v-if=\"webAppState === 'update'\" style=\"color: green\">\r\n            ({{ availableWebAppVersion }})\r\n          </span>\r\n          <span v-else-if=\"webAppState === 'offline'\" style=\"color: red\">\r\n            (N/A)\r\n          </span>\r\n        </p>\r\n      </div>\r\n\r\n      <div v-if=\"!showProgress\">\r\n        <button v-if=\"updateAvailable\" @click=\"startUpdate\">\r\n          UPDATE AVAILABLE\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"progress-container\" v-if=\"showProgress\">\r\n        <div class=\"label\">{{ updateLabel }}</div>\r\n        <div class=\"progress-wrapper\">\r\n          <progress max=\"100\" :value=\"progress\"></progress>\r\n          <div class=\"progress-percent\">{{ progress }}%</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\n// Installed version values\r\nconst installedFirmwareVersion = ref('')\r\nconst installedWebAppVersion = ref('')\r\n// Available (remote) version values\r\nconst availableFirmwareVersion = ref('')\r\nconst availableWebAppVersion = ref('')\r\n// Whether an update is available\r\nconst updateAvailable = ref(false)\r\n// State indicators: '', 'update', 'offline'\r\nconst firmwareState = ref('')\r\nconst webAppState = ref('')\r\n// Label shown above progress bar\r\nconst updateLabel = ref('')\r\n// Progress percentage (0–100)\r\nconst progress = ref(0)\r\n// Whether to show the progress section\r\nconst showProgress = ref(false)\r\n// Flag to detect if update has started\r\nconst updateInProgress = ref(false)\r\n\r\nconst emit = defineEmits(['close'])\r\n\r\nfunction closeModal() {\r\n  emit('close')\r\n}\r\n\r\n// Fetch currently installed versions from the ESP32\r\nasync function fetchInstalledVersions() {\r\n  try {\r\n    const response = await fetch('/api/v1/versions')\r\n    const data = await response.json()\r\n    installedFirmwareVersion.value = data.versions.firm_version\r\n    installedWebAppVersion.value = data.versions.web_app_version\r\n  } catch {\r\n    firmwareState.value = 'offline'\r\n    webAppState.value = 'offline'\r\n  }\r\n  console.log('Firmware Version:', installedFirmwareVersion.value);\r\n  console.log('WebApp Version:', installedWebAppVersion.value);\r\n}\r\n\r\n// Fetch available versions from the OTA server\r\nasync function fetchAvailableVersions() {\r\n  try {\r\n    const response = await fetch(\r\n      'https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/version.json'\r\n    )\r\n    const data = await response.json()\r\n    availableFirmwareVersion.value = data.firmware_version\r\n    availableWebAppVersion.value = data.web_app_version\r\n  } catch {\r\n    firmwareState.value = 'offline'\r\n    webAppState.value = 'offline'\r\n    return\r\n  }\r\n  firmwareState.value =\r\n    installedFirmwareVersion.value !== availableFirmwareVersion.value\r\n      ? 'update'\r\n      : ''\r\n  webAppState.value =\r\n    installedWebAppVersion.value !== availableWebAppVersion.value\r\n      ? 'update'\r\n      : ''\r\n  updateAvailable.value =\r\n    firmwareState.value === 'update' || webAppState.value === 'update'\r\n}\r\n\r\n// Check if any component needs updating\r\nfunction checkForUpdate() {\r\n  if (\r\n    (installedFirmwareVersion.value !== availableFirmwareVersion.value ||\r\n      installedWebAppVersion.value !== availableWebAppVersion.value) &&\r\n    firmwareState.value !== 'offline' &&\r\n    webAppState.value !== 'offline'\r\n  ) {\r\n    updateAvailable.value = true\r\n  } else {\r\n    updateAvailable.value = false\r\n  }\r\n}\r\n\r\n// Poll OTA progress endpoint every second\r\nlet progressInterval = null\r\nfunction startProgressPolling() {\r\n  progressInterval = setInterval(async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/ota/progress')\r\n      const data = await response.json()\r\n      progress.value = data.progress\r\n\r\n      if (progress.value > 0 && !updateInProgress.value) {\r\n        updateInProgress.value = true\r\n      }\r\n\r\n      // When progress returns to 0 after an update, reload the page\r\n      if (updateInProgress.value && progress.value === 0) {\r\n        clearInterval(progressInterval)\r\n        updateInProgress.value = false\r\n        window.location.reload()\r\n      }\r\n    } catch {\r\n      // Ignore polling errors\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n// Initiate OTA update for firmware, web app, or both\r\nasync function startUpdate() {\r\n  showProgress.value = true\r\n  progress.value = 0\r\n\r\n  const needsFirmwareUpdate =\r\n    installedFirmwareVersion.value !== availableFirmwareVersion.value\r\n  const needsWebAppUpdate =\r\n    installedWebAppVersion.value !== availableWebAppVersion.value\r\n\r\n  if (needsFirmwareUpdate && needsWebAppUpdate) {\r\n    updateLabel.value = 'Updating Web-App and Firmware...'\r\n    try {\r\n      const response = await fetch('/api/v1/ota/both', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          firmware_url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/firmware_v${availableFirmwareVersion.value}.bin`,\r\n          web_app_url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/web_app_v${availableWebAppVersion.value}.bin`\r\n        })\r\n      })\r\n      await response.text()\r\n      startProgressPolling()\r\n    } catch {\r\n      // Handle error silently\r\n    }\r\n  } else if (needsFirmwareUpdate) {\r\n    updateLabel.value = 'Updating firmware...'\r\n    try {\r\n      const response = await fetch('/api/v1/ota/firmware', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/firmware_v${availableFirmwareVersion.value}.bin`\r\n        })\r\n      })\r\n      await response.text()\r\n      startProgressPolling()\r\n    } catch {\r\n      // Handle error silently\r\n    }\r\n  } else if (needsWebAppUpdate) {\r\n    updateLabel.value = 'Updating Web-App...'\r\n    try {\r\n      const response = await fetch('/api/v1/ota/web_app', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          url: `https://download.smartsolutions4home.com/ota-firmware/7-flip-firmware/web_app_v${availableWebAppVersion.value}.bin`\r\n        })\r\n      })\r\n      await response.text()\r\n      startProgressPolling()\r\n    } catch {\r\n      // Handle error silently\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await fetchInstalledVersions()\r\n  await fetchAvailableVersions()\r\n  checkForUpdate()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.update-check {\r\n  max-width: 420px;\r\n  margin: 150px auto;\r\n  background: #ffffff;\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.label {\r\n  color: #333333;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nh3 {\r\n  color: #333333;\r\n  margin: 0 0 5px;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n}\r\n\r\nbutton {\r\n  background: #40464e;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: #ffffff;\r\n  border-radius: 20px;\r\n  width: 148px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-top: 16px;\r\n}\r\n\r\n.progress-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: 8px;\r\n}\r\n\r\nprogress {\r\n  width: 390px;\r\n  height: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n}\r\n\r\n/* Chrome, Safari, Opera */\r\nprogress::-webkit-progress-bar {\r\n  background-color: #e6e6e6;\r\n  border-radius: 10px;\r\n}\r\n\r\nprogress::-webkit-progress-value {\r\n  background-color: #333333;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Firefox */\r\nprogress::-moz-progress-bar {\r\n  background-color: #333333;\r\n  border-radius: 10px;\r\n}\r\n\r\n.progress-percent {\r\n  font-size: 0.7em;\r\n  color: #333333;\r\n}\r\n</style>\r\n","import script from \"./UpdateCheck.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateCheck.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateCheck.vue?vue&type=style&index=0&id=71f57ed4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71f57ed4\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <div class=\"wifi-config\">\r\n      <h3>Wi-Fi Configuration</h3>\r\n      <div>\r\n        <label>Current Mode: {{ mode }}</label>\r\n      </div>\r\n      <div class=\"wifi-mode\">\r\n        <input\r\n          type=\"radio\"\r\n          id=\"ap\"\r\n          value=\"AP\"\r\n          v-model=\"selectedMode\"\r\n        />\r\n        <label for=\"ap\">Access Point</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"sta\"\r\n          value=\"STA\"\r\n          v-model=\"selectedMode\"\r\n        />\r\n        <label for=\"sta\">Wi-Fi Client</label>\r\n      </div>\r\n      <div v-if=\"selectedMode === 'STA'\">\r\n        <div>\r\n          <br />\r\n          <label for=\"ssid\">SSID:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ssid\"\r\n            v-model=\"ssid\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button @click=\"updateConfig\">SAVE</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\n// Reactive variables for current mode, selected mode, SSID, and password\r\nconst mode = ref('')\r\nconst selectedMode = ref('AP')\r\nconst ssid = ref('')\r\nconst password = ref('')\r\n\r\nconst emit = defineEmits(['close'])\r\n\r\nfunction closeModal() {\r\n  emit('close')\r\n}\r\n\r\n// Fetch current configuration from GET /api/v1/mode\r\nasync function fetchConfig() {\r\n  try {\r\n    const response = await fetch('/api/v1/mode')\r\n    if (response.ok) {\r\n      const data = await response.json()\r\n      mode.value = data.mode\r\n      selectedMode.value = data.mode\r\n      ssid.value = data.ssid || ''\r\n      // For security reasons, password is not returned by the API; leave it empty\r\n      password.value = ''\r\n    }\r\n  } catch {\r\n    console.error('Error fetching configuration')\r\n  }\r\n}\r\n\r\n// Update configuration via POST /api/v1/mode; include SSID and password in STA mode\r\nasync function updateConfig() {\r\n  const payload = { mode: selectedMode.value }\r\n  if (selectedMode.value === 'STA') {\r\n    payload.ssid = ssid.value\r\n    payload.password = password.value\r\n  }\r\n  try {\r\n    const response = await fetch('/api/v1/mode', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload)\r\n    })\r\n    if (response.ok) {\r\n      const message = await response.text()\r\n      alert(message)\r\n    } else {\r\n      alert('Failed to update configuration')\r\n    }\r\n  } catch {\r\n    console.error('Error updating configuration')\r\n    alert('Error updating configuration')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchConfig()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.wifi-config {\r\n  max-width: 420px;\r\n  margin: 150px auto;\r\n  background: #ffffff;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\n\r\nh3 {\r\n  color: #333333;\r\n  margin: 0 0 15px;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n}\r\n\r\nlabel {\r\n  color: #333333;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput,\r\nselect {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #9c9c9c;\r\n  color: #383838;\r\n}\r\n\r\ninput[type='radio'] {\r\n  display: inline-block;\r\n  accent-color: #333333;\r\n  width: 16px;\r\n  margin: 5px 10px 0 0;\r\n  position: relative;\r\n  top: 2px;\r\n}\r\n\r\nbutton {\r\n  background: #333333;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: #ffffff;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.wifi-mode {\r\n  margin: 15px 0;\r\n}\r\n</style>\r\n","import script from \"./WifiConfig.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WifiConfig.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WifiConfig.vue?vue&type=style&index=0&id=8763922c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8763922c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backdrop\" @click.self=\"closeModal\">\r\n    <div class=\"settings\">\r\n      <h3>Settings</h3>\r\n\r\n      <div class=\"option\">\r\n        <label>LED</label>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" v-model=\"ledState\" />\r\n          <span class=\"slider\"></span>\r\n        </label>\r\n      </div>\r\n\r\n      <button @click.self=\"closeModal\">OK</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Import necessary functions from Vue 3 Composition API\r\nimport { ref, watch, onMounted } from 'vue'\r\n\r\n// Define the emit event for closing the modal\r\nconst emit = defineEmits(['close'])\r\n\r\n// Create a reactive variable to hold the LED state (true/false)\r\nconst ledState = ref(false)\r\n\r\n/**\r\n * Fetch the current LED status from the server.\r\n * Endpoint: GET /api/v1/led\r\n * Expected response: { status: boolean }\r\n */\r\nasync function fetchLedState() {\r\n  try {\r\n    const response = await fetch('/api/v1/led')\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n    const data = await response.json()\r\n    // Update local state with the value returned by the server\r\n    ledState.value = data.status\r\n  } catch (error) {\r\n    console.error('Failed to fetch LED state:', error)\r\n  }\r\n}\r\n\r\n/**\r\n * Send the new LED status to the server.\r\n * Endpoint: POST /api/v1/led\r\n * Request body: { status: boolean }\r\n */\r\nasync function updateLedState(newState) {\r\n  try {\r\n    const response = await fetch('/api/v1/led', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ status: newState })\r\n    })\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n    // Optionally, you could read the response if server returns updated object\r\n    // const result = await response.json()\r\n  } catch (error) {\r\n    console.error('Failed to update LED state:', error)\r\n  }\r\n}\r\n\r\n/**\r\n * Watcher: whenever ledState changes, send a POST to update the server.\r\n */\r\nwatch(ledState, (newVal, oldVal) => {\r\n  updateLedState(newVal)\r\n})\r\n\r\n/**\r\n * Emit the 'close' event to parent component to close the modal.\r\n */\r\nfunction closeModal() {\r\n  emit('close')\r\n}\r\n\r\n/**\r\n * On component mount, fetch the initial LED state from the server\r\n * so that the checkbox renders correctly.\r\n */\r\nonMounted(() => {\r\n  fetchLedState()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.settings {\r\n  max-width: 420px;\r\n  margin: 150px auto;\r\n  background: #ffffff;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\n\r\nh3 {\r\n  color: #333333;\r\n  margin: 0 0 15px;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n}\r\n\r\nlabel {\r\n  color: #333333;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n\r\n.option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 20px;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #6c757d;\r\n  transition: 0.4s;\r\n  border-radius: 20px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 2px;\r\n  bottom: 2px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.switch input:checked + .slider {\r\n  background-color: #007bff;\r\n}\r\n\r\n.switch input:checked + .slider:before {\r\n  transform: translateX(20px);\r\n}\r\n</style>\r\n","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=61fd9fd0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-61fd9fd0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"display-container\">\r\n    <!-- Display background image -->\r\n    <img :src=\"require('@/assets/display.png')\" alt=\"Display background\" />\r\n\r\n    <!-- Render clickable hotspot for each segment -->\r\n    <div\r\n      v-for=\"segment in segmentsConfig\"\r\n      :key=\"segment.name\"\r\n      class=\"segment-container\"\r\n      :class=\"{ 'non-editable': !editable }\"\r\n      :style=\"{\r\n        top: segment.top,\r\n        left: segment.left,\r\n        width: segment.width,\r\n        height: segment.height,\r\n        cursor: editable ? 'pointer' : 'default'\r\n      }\"\r\n      @click.stop=\"toggleSegment(segment.name)\"\r\n    >\r\n      <!-- If a segment is active, overlay the active-segment image.\r\n           Use the horizontal image when rotation is 0, vertical otherwise.\r\n           No CSS transform is applied since the image is pre-oriented. -->\r\n      <img\r\n        v-if=\"activeSegments[segment.name]\"\r\n        :src=\"\r\n          segment.rotation === 0\r\n            ? require('@/assets/segment-h.png')\r\n            : require('@/assets/segment-v.png')\r\n        \"\r\n        alt=\"Active segment\"\r\n        class=\"segment-image\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, watch } from 'vue'\r\n\r\nconst props = defineProps({\r\n  initialValue: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  // If false, clicks do not toggle segments\r\n  editable: {\r\n    type: Boolean,\r\n    default: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update-signal'])\r\n\r\n// Current bitmask value\r\nconst SignValue = ref(props.initialValue)\r\n\r\n// State of each segment (A–G)\r\nconst activeSegments = reactive({\r\n  A: Boolean(props.initialValue & (1 << 0)),\r\n  B: Boolean(props.initialValue & (1 << 1)),\r\n  C: Boolean(props.initialValue & (1 << 2)),\r\n  D: Boolean(props.initialValue & (1 << 3)),\r\n  E: Boolean(props.initialValue & (1 << 4)),\r\n  F: Boolean(props.initialValue & (1 << 5)),\r\n  G: Boolean(props.initialValue & (1 << 6))\r\n})\r\n\r\n// Configuration for position and size of each segment hotspot\r\nconst segmentsConfig = [\r\n  { name: 'A', top: '19px', left: '48px', width: '115px', height: '38px', rotation: 0 },\r\n  { name: 'B', top: '48px', left: '154px', width: '38px', height: '115px', rotation: 90 },\r\n  { name: 'C', top: '183px', left: '154px', width: '38px', height: '115px', rotation: 90 },\r\n  { name: 'D', top: '289px', left: '48px', width: '115px', height: '38px', rotation: 0 },\r\n  { name: 'E', top: '183px', left: '18px', width: '38px', height: '115px', rotation: -90 },\r\n  { name: 'F', top: '48px', left: '18px', width: '38px', height: '115px', rotation: -90 },\r\n  { name: 'G', top: '154px', left: '48px', width: '115px', height: '38px', rotation: 0 }\r\n]\r\n\r\n// When props.initialValue changes, update bitmask and segment states\r\nwatch(\r\n  () => props.initialValue,\r\n  (newVal) => {\r\n    SignValue.value = newVal\r\n    activeSegments.A = Boolean(newVal & (1 << 0))\r\n    activeSegments.B = Boolean(newVal & (1 << 1))\r\n    activeSegments.C = Boolean(newVal & (1 << 2))\r\n    activeSegments.D = Boolean(newVal & (1 << 3))\r\n    activeSegments.E = Boolean(newVal & (1 << 4))\r\n    activeSegments.F = Boolean(newVal & (1 << 5))\r\n    activeSegments.G = Boolean(newVal & (1 << 6))\r\n  }\r\n)\r\n\r\n// Helper: emit the current bitmask value to the parent\r\nconst onSignalChange = () => {\r\n  emit('update-signal', SignValue.value)\r\n}\r\n\r\n// Toggle segment state (on/off) only when editable === true\r\nfunction toggleSegment(segmentName) {\r\n  if (!props.editable) return\r\n\r\n  activeSegments[segmentName] = !activeSegments[segmentName]\r\n\r\n  // Recalculate the new bitmask value\r\n  let value = 0\r\n  if (activeSegments.A) value |= 1 << 0\r\n  if (activeSegments.B) value |= 1 << 1\r\n  if (activeSegments.C) value |= 1 << 2\r\n  if (activeSegments.D) value |= 1 << 3\r\n  if (activeSegments.E) value |= 1 << 4\r\n  if (activeSegments.F) value |= 1 << 5\r\n  if (activeSegments.G) value |= 1 << 6\r\n\r\n  SignValue.value = value\r\n  onSignalChange()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Display container (background) */\r\n.display-container {\r\n  position: relative;\r\n  width: 210px;   /* width of display.png */\r\n  height: 346px;  /* height of display.png */\r\n}\r\n\r\n/* Container for each segment hotspot.\r\n   The cursor is set inline, so no cursor declaration is needed here. */\r\n.segment-container {\r\n  position: absolute;\r\n}\r\n\r\n/* When non-editable, force default cursor */\r\n.non-editable {\r\n  cursor: default !important;\r\n}\r\n\r\n/* Active segment image: fills the entire hotspot area */\r\n.segment-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none; /* clicks on the image pass through to the container */\r\n}\r\n</style>\r\n","import script from \"./SingleDisplay.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SingleDisplay.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SingleDisplay.vue?vue&type=style&index=0&id=505a7fd9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-505a7fd9\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"display-wrapper\" ref=\"containerRef\">\r\n    <!-- Inline container for displays and separators -->\r\n    <div class=\"display-inline\" v-if=\"DisplayCount > 0\">\r\n      <template v-for=\"index in displayIndices\" :key=\"index\">\r\n        <!-- SingleDisplay with click handling and editable prop -->\r\n        <SingleDisplay\r\n          :initialValue=\"getDisplayValue(index)\"\r\n          :editable=\"getModeForIndex(index) === 'manual'\"\r\n          @update-signal=\"handleUpdateSignal(index, $event)\"\r\n        />\r\n        <!-- Inline separator (if not 'plus') -->\r\n        <img\r\n          v-if=\"index < DisplayCount && separators[index - 1] !== 'plus'\"\r\n          :src=\"require(`@/assets/${separators[index - 1]}.png`)\"\r\n          alt=\"separator\"\r\n          class=\"inline-separator\"\r\n          @click=\"userChangedSeparator(index - 1)\"\r\n        />\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Plus icons overlay (only when separator === 'plus') -->\r\n    <div class=\"plus-overlay\" v-if=\"DisplayCount > 0\">\r\n      <template v-for=\"(sep, index) in separators\" :key=\"'overlay-' + index\">\r\n        <img\r\n          v-if=\"sep === 'plus'\"\r\n          :src=\"require(`@/assets/plus.png`)\"\r\n          alt=\"plus\"\r\n          class=\"plus-icon\"\r\n          :style=\"plusStyle(index)\"\r\n          @click.stop=\"openContextMenu($event, index)\"\r\n        />\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Context menu for selecting separator -->\r\n    <div\r\n      v-if=\"contextMenu.visible\"\r\n      class=\"context-menu\"\r\n      :style=\"{ top: contextMenu.y + 'px', left: contextMenu.x + 'px' }\"\r\n    >\r\n      <div\r\n        v-for=\"option in options\"\r\n        :key=\"option\"\r\n        class=\"context-menu-option\"\r\n        @click=\"selectSeparator(option)\"\r\n      >\r\n        {{ option }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading state -->\r\n    <div v-if=\"DisplayCount === 0\">\r\n      Loading...\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\r\nimport SingleDisplay from './SingleDisplay.vue'\r\n\r\n// Prop: externalConfig from parent (Mode.vue)\r\nconst props = defineProps({\r\n  externalConfig: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n})\r\n\r\n// Emit to parent\r\nconst emit = defineEmits(['update-display-data'])\r\n\r\n// Reference to the container\r\nconst containerRef = ref(null)\r\n\r\n// Main settings (fetched from server first, then updated via externalConfig)\r\nconst jsonSettings = ref(null)\r\n\r\n// Total number of displays\r\nconst DisplayCount = ref(0)\r\n\r\n// Array of separators (e.g., 'space', 'colon', 'plus', etc.)\r\nconst separators = ref([])\r\n\r\n// Values from API (/api/v1/pattern)\r\nconst SignValues = ref([])\r\n\r\n// Options for context menu (separators)\r\nconst options = ['space', 'blank', 'colon', 'dot', 'dash']\r\n\r\n// Context menu state\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0,\r\n  index: null\r\n})\r\n\r\n// Constants for plusStyle calculations\r\nconst displayWidth = 210\r\nconst plusWidth = 30\r\nconst displayHeight = 346\r\nconst plusTop = (displayHeight - plusWidth) / 2\r\n\r\n// Fetch initial display settings from /api/v1/config\r\nasync function fetchDisplaySettings() {\r\n  try {\r\n    //const response = await fetch('http://localhost:3000/display_settings');\r\n    const response = await fetch('/api/v1/config')\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok: ' + response.statusText)\r\n    }\r\n    const data = await response.json()\r\n    jsonSettings.value = data\r\n\r\n    // Compute number of displays\r\n    const groupValues = Object.values(jsonSettings.value.groups)\r\n    const count = Math.max(...groupValues.map((g) => g.end_position)) + 1\r\n    DisplayCount.value = count\r\n\r\n    // Initialize separators as 'plus'\r\n    separators.value = Array(count - 1).fill('plus')\r\n    // Overwrite actual separators from config\r\n    for (const key in jsonSettings.value.groups) {\r\n      const group = jsonSettings.value.groups[key]\r\n      if (group.start_position > 0 && group.separator) {\r\n        separators.value[group.start_position - 1] = group.separator\r\n      }\r\n    }\r\n\r\n    // Initialize SignValues as all null (first render will use config)\r\n    SignValues.value = Array(count).fill(null)\r\n\r\n    // Emit initial aggregatedData so Mode.vue receives it immediately\r\n    emit('update-display-data', aggregateDisplaySettings())\r\n  } catch (error) {\r\n    console.error('Error fetching display settings:', error)\r\n  }\r\n}\r\n\r\n// Poll /api/v1/pattern every second; update SignValues where mode != 'manual'\r\nlet pollIntervalId = null\r\nasync function pollPattern() {\r\n  try {\r\n    const res = await fetch('/api/v1/pattern')\r\n    if (!res.ok) {\r\n      throw new Error('Pattern fetch failed: ' + res.status)\r\n    }\r\n    const arr = await res.json()\r\n\r\n    let anyChanged = false\r\n    for (let i = 0; i < arr.length && i < SignValues.value.length; i++) {\r\n      const index = i + 1\r\n      const mode = getModeForIndex(index)\r\n      if (mode === 'manual') continue\r\n      if (SignValues.value[i] !== arr[i]) {\r\n        SignValues.value[i] = arr[i]\r\n        anyChanged = true\r\n      }\r\n    }\r\n    if (arr.length > SignValues.value.length) {\r\n      for (let i = SignValues.value.length; i < arr.length; i++) {\r\n        const index = i + 1\r\n        const mode = getModeForIndex(index)\r\n        if (mode === 'manual') continue\r\n        SignValues.value[i] = arr[i]\r\n        anyChanged = true\r\n      }\r\n    }\r\n\r\n    // If any SignValues changed (for non-'manual' modes), emit updated aggregatedData\r\n    if (anyChanged) {\r\n      emit('update-display-data', aggregateDisplaySettings())\r\n    }\r\n  } catch (e) {\r\n    console.error('[Display.vue] pollPattern error:', e)\r\n  }\r\n}\r\n\r\n// On mount: fetch config, then start polling\r\nonMounted(() => {\r\n  fetchDisplaySettings().then(() => {\r\n    pollPattern()\r\n    pollIntervalId = setInterval(pollPattern, 1000)\r\n  })\r\n})\r\n\r\n// Clean up on unmount\r\nonUnmounted(() => {\r\n  if (pollIntervalId) {\r\n    clearInterval(pollIntervalId)\r\n    pollIntervalId = null\r\n  }\r\n})\r\n\r\n// Computed array [1, 2, ..., DisplayCount]\r\nconst displayIndices = computed(() =>\r\n  Array.from({ length: DisplayCount.value }, (_, i) => i + 1)\r\n)\r\n\r\n// Helper: get initial value for a display from config (no polling)\r\nfunction getInitialValueFromConfig(index) {\r\n  if (!jsonSettings.value) return 0\r\n  const idx = index - 1\r\n  const groups = Object.values(jsonSettings.value.groups).sort(\r\n    (a, b) => a.start_position - b.start_position\r\n  )\r\n  for (const group of groups) {\r\n    if (idx >= group.start_position && idx <= group.end_position) {\r\n      const localIndex = idx - group.start_position\r\n      return group.pattern?.[`disp${localIndex}`] ?? 0\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n// Helper: get mode for a given display index\r\nfunction getModeForIndex(index) {\r\n  if (!jsonSettings.value) return 'none'\r\n  const idx = index - 1\r\n  const groups = Object.values(jsonSettings.value.groups).sort(\r\n    (a, b) => a.start_position - b.start_position\r\n  )\r\n  for (const group of groups) {\r\n    if (idx >= group.start_position && idx <= group.end_position) {\r\n      return group.mode ?? 'none'\r\n    }\r\n  }\r\n  return 'none'\r\n}\r\n\r\n// Helper: get value to show on display\r\nfunction getDisplayValue(index) {\r\n  const idx0 = index - 1\r\n  const mode = getModeForIndex(index)\r\n  const currentValue = SignValues.value[idx0]\r\n  if (mode === 'manual') {\r\n    // In manual mode, use SignValues if defined, otherwise fallback to config\r\n    return currentValue !== null && currentValue !== undefined\r\n      ? currentValue\r\n      : getInitialValueFromConfig(index)\r\n  }\r\n  // In other modes, also prefer SignValues, otherwise fallback to config\r\n  if (currentValue !== null && currentValue !== undefined) {\r\n    return currentValue\r\n  }\r\n  return getInitialValueFromConfig(index)\r\n}\r\n\r\n// Build aggregatedData object from SignValues and separators\r\nfunction aggregateDisplaySettings() {\r\n  const totalDisplays = DisplayCount.value\r\n  const computedGroups = []\r\n  let currentGroupStart = 0\r\n\r\n  for (let i = 0; i < totalDisplays - 1; i++) {\r\n    if (separators.value[i] !== 'plus') {\r\n      const groupPattern = {}\r\n      for (let j = currentGroupStart; j <= i; j++) {\r\n        const currentValue = SignValues.value[j]\r\n        const mode = getModeForIndex(j + 1)\r\n        groupPattern[`disp${j - currentGroupStart}`] =\r\n          currentValue !== null && currentValue !== undefined\r\n            ? currentValue\r\n            : getInitialValueFromConfig(j + 1)\r\n      }\r\n      computedGroups.push({\r\n        start: currentGroupStart,\r\n        end: i,\r\n        pattern: groupPattern,\r\n        separator: currentGroupStart > 0 ? separators.value[currentGroupStart - 1] : null\r\n      })\r\n      currentGroupStart = i + 1\r\n    }\r\n  }\r\n\r\n  // Last group\r\n  const lastPattern = {}\r\n  for (let j = currentGroupStart; j < totalDisplays; j++) {\r\n    const currentValue = SignValues.value[j]\r\n    const mode = getModeForIndex(j + 1)\r\n    lastPattern[`disp${j - currentGroupStart}`] =\r\n      currentValue !== null && currentValue !== undefined\r\n        ? currentValue\r\n        : getInitialValueFromConfig(j + 1)\r\n  }\r\n  computedGroups.push({\r\n    start: currentGroupStart,\r\n    end: totalDisplays - 1,\r\n    pattern: lastPattern,\r\n    separator: currentGroupStart > 0 ? separators.value[currentGroupStart - 1] : null\r\n  })\r\n\r\n  // Compare with original jsonSettings.value.groups to preserve start/end, separator, mode\r\n  const originalGroups = jsonSettings.value.groups\r\n  const originalEntries = Object.entries(originalGroups).sort(\r\n    (a, b) => a[1].start_position - b[1].start_position\r\n  )\r\n\r\n  const updatedGroups = {}\r\n  for (let i = 0; i < computedGroups.length; i++) {\r\n    const computed = computedGroups[i]\r\n    let matchingOriginal = null\r\n    for (const [key, origGroup] of originalEntries) {\r\n      if (\r\n        origGroup.start_position === computed.start &&\r\n        origGroup.end_position === computed.end\r\n      ) {\r\n        matchingOriginal = origGroup\r\n        break\r\n      }\r\n    }\r\n\r\n    let newGroup = {}\r\n    if (matchingOriginal) {\r\n      newGroup = { ...matchingOriginal }\r\n      // Overwrite pattern and separator from computed\r\n      newGroup.pattern = computed.pattern\r\n      newGroup.separator =\r\n        computed.start > 0 ? separators.value[computed.start - 1] : null\r\n      newGroup.start_position = computed.start\r\n      newGroup.end_position = computed.end\r\n    } else {\r\n      // If no original match (rare), create a new group structure\r\n      newGroup = {\r\n        start_position: computed.start,\r\n        end_position: computed.end,\r\n        pattern: computed.pattern,\r\n        separator:\r\n          computed.start > 0 ? separators.value[computed.start - 1] : null,\r\n        mode: null\r\n      }\r\n    }\r\n    updatedGroups[`group${i}`] = newGroup\r\n  }\r\n\r\n  return {\r\n    general: { ...jsonSettings.value.general, groups: computedGroups.length },\r\n    groups: updatedGroups\r\n  }\r\n}\r\n\r\n// Handle signal update from SingleDisplay when in 'manual' mode\r\nfunction handleUpdateSignal(index, newValue) {\r\n  if (getModeForIndex(index) !== 'manual') {\r\n    return\r\n  }\r\n  const idx0 = index - 1\r\n  SignValues.value[idx0] = newValue\r\n  // Emit only when user has clicked a segment\r\n  emit('update-display-data', aggregateDisplaySettings())\r\n}\r\n\r\n// Handle inline separator click: set to 'plus' and emit update\r\nfunction userChangedSeparator(idx) {\r\n  separators.value[idx] = 'plus'\r\n  emit('update-display-data', aggregateDisplaySettings())\r\n}\r\n\r\n// Handle separator selection from context menu\r\nfunction selectSeparator(option) {\r\n  if (contextMenu.value.index !== null) {\r\n    separators.value[contextMenu.value.index] = option\r\n    emit('update-display-data', aggregateDisplaySettings())\r\n  }\r\n  contextMenu.value.visible = false\r\n  contextMenu.value.index = null\r\n}\r\n\r\n// Open context menu\r\nfunction openContextMenu(event, index) {\r\n  event.preventDefault()\r\n  const rect = containerRef.value.getBoundingClientRect()\r\n  contextMenu.value = {\r\n    visible: true,\r\n    x: event.clientX - rect.left,\r\n    y: event.clientY - rect.top,\r\n    index: index\r\n  }\r\n}\r\n\r\n// Global listener to close context menu when clicking elsewhere\r\ndocument.addEventListener('click', () => {\r\n  contextMenu.value.visible = false\r\n})\r\n\r\n// Calculate style for plus icons\r\nfunction plusStyle(index) {\r\n  let offset = 0\r\n  for (let i = 0; i < index; i++) {\r\n    if (separators.value[i] !== 'plus') {\r\n      offset += 106 // width of separator icon\r\n    }\r\n  }\r\n  const left = (index + 1) * displayWidth + offset - plusWidth / 2\r\n  return { left: left + 'px', top: plusTop + 'px' }\r\n}\r\n\r\n// When parent (Mode.vue) provides new aggregatedData (e.g., mode or separator change),\r\n// overwrite jsonSettings and separators. Do not reset SignValues except for changed modes.\r\nwatch(\r\n  () => props.externalConfig,\r\n  (newConfig, oldConfig) => {\r\n    if (!newConfig) return\r\n\r\n    // If previous jsonSettings exists, compare modes in groups\r\n    if (jsonSettings.value) {\r\n      const oldGroups = jsonSettings.value.groups\r\n      const newGroups = newConfig.groups\r\n      // For each group, check if mode changed\r\n      for (const key in newGroups) {\r\n        const oldMode = oldGroups[key]?.mode ?? 'none'\r\n        const newMode = newGroups[key]?.mode ?? 'none'\r\n        if (oldMode !== newMode) {\r\n          // Clear SignValues for this group's range\r\n          const { start_position, end_position } = newGroups[key]\r\n          for (let idx = start_position; idx <= end_position; idx++) {\r\n            SignValues.value[idx] = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Overwrite jsonSettings with new config\r\n    jsonSettings.value = JSON.parse(JSON.stringify(newConfig))\r\n\r\n    // Recalculate DisplayCount (in case group ranges changed)\r\n    const groupValues = Object.values(jsonSettings.value.groups)\r\n    const count = Math.max(...groupValues.map((g) => g.end_position)) + 1\r\n    DisplayCount.value = count\r\n\r\n    // Reinitialize separators (default 'plus')\r\n    separators.value = Array(count - 1).fill('plus')\r\n    for (const key in jsonSettings.value.groups) {\r\n      const grp = jsonSettings.value.groups[key]\r\n      if (grp.start_position > 0 && grp.separator) {\r\n        separators.value[grp.start_position - 1] = grp.separator\r\n      }\r\n    }\r\n\r\n    // Do not reset SignValues here (except where mode changed above)\r\n  },\r\n  { deep: true, immediate: true }\r\n)\r\n</script>\r\n\r\n<style scoped>\r\n.display-wrapper {\r\n  position: relative;\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Container for displays arranged inline */\r\n.display-inline {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n/* Inline separator (non-plus) styles */\r\n.inline-separator {\r\n  width: 106px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Container for plus icons overlayed on displays */\r\n.plus-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none; /* Only plus icons receive clicks */\r\n}\r\n\r\n/* Plus icon styles */\r\n.plus-icon {\r\n  position: absolute;\r\n  width: 30px;\r\n  cursor: pointer;\r\n  pointer-events: auto; /* Allow clicks on plus icons */\r\n}\r\n\r\n/* Context menu styles */\r\n.context-menu {\r\n  position: absolute;\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  width: 85px;\r\n  color: #222222;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n}\r\n\r\n.context-menu :hover {\r\n  background-color: #b8b8b8;\r\n}\r\n\r\n.context-menu-option {\r\n  padding: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Loading state is unstyled and displays default text */\r\n</style>\r\n","import script from \"./Display.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Display.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Display.vue?vue&type=style&index=0&id=cb0061b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cb0061b8\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"time-check\">\r\n    <!-- Display the current time data -->\r\n    <div v-if=\"timeData\" class=\"current-time-style\">\r\n      <p class=\"time\">\r\n        {{ timeData.hour }}:{{ timeData.minute }}:{{ timeData.second }}&nbsp;\r\n        {{ timeData.day }}.{{ timeData.month }}.{{ timeData.year }}\r\n        <span v-if=\"is12HourFormat\">{{ timeData.period }}</span>\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Dropdown list for selecting the timezone -->\r\n    <label for=\"timezone-select\">Select Timezone: </label>\r\n    <select id=\"timezone-select\" v-model=\"selectedTimezone\" @change=\"updateTime\">\r\n      <option v-for=\"tz in timezones\" :key=\"tz\" :value=\"tz\">\r\n        {{ tz }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- Set offset (optional) -->\r\n    <div class=\"offset\">\r\n      <label>Offset (if needed)</label>\r\n      <input\r\n        type=\"number\"\r\n        v-model=\"offset\"\r\n        min=\"-23\"\r\n        max=\"23\"\r\n        @change=\"onOffsetChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Toggle switch for 12h/24h format -->\r\n    <div class=\"format-toggle\">\r\n      <label for=\"format-toggle\">Time format (12/24h): </label>\r\n      <label class=\"switch\">\r\n        <input\r\n          id=\"format-toggle\"\r\n          type=\"checkbox\"\r\n          v-model=\"is12HourFormat\"\r\n          @change=\"onFormatChange\"\r\n        />\r\n        <span class=\"slider\"></span>\r\n      </label>\r\n    </div>\r\n\r\n    <!-- Dropdown for selecting unit, emit to parent -->\r\n    <div class=\"unit-select\">\r\n      <label for=\"unit-select\">Select unit to display: </label>\r\n      <select\r\n        id=\"unit-select\"\r\n        v-model=\"selectedUnit\"\r\n        @change=\"emit('unitSelected', selectedUnit)\"\r\n      >\r\n        <option v-for=\"u in units\" :key=\"u\" :value=\"u\">\r\n          {{ u }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  onUnmounted,\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose\r\n} from 'vue'\r\n\r\nconst props = defineProps({\r\n  initialConfig:        {},\r\n  initialGeneralConfig: { type: Object, default: () => ({}) }\r\n})\r\n\r\n// Emit events to parent when unit, format, timezone or offset changes\r\nconst emit = defineEmits([\r\n  'unitSelected',\r\n  'formatSelected',\r\n  'timezoneSelected',\r\n  'offsetSelected'\r\n])\r\n\r\n// Expose the sendTimeArray method to the parent\r\ndefineExpose({ sendTimeArray })\r\n\r\n// List of supported timezones\r\nconst timezones = ref([])\r\nconst selectedTimezone = ref('')\r\n\r\n// 12h/24h format toggle\r\nconst is12HourFormat = ref(false)\r\n\r\n// Offset in hours\r\nconst offset = ref(0)\r\n\r\n// Unit selection (unused internally, just emitted)\r\nconst units = ['hours', 'minutes', 'seconds', 'days', 'months', 'years']\r\nconst selectedUnit = ref(units[0])\r\n\r\n// Reactive object holding the split-up current time parts\r\nconst timeData = ref(null)\r\nlet timer = null\r\n\r\n// Update only the displayed time (no network call)\r\nconst refreshTime = () => {\r\n  // 1) calculate current timestamp with offset applied\r\n  const nowWithOffset = Date.now() + offset.value * 60 * 60 * 1000\r\n  const date = new Date(nowWithOffset)\r\n\r\n  // 2) build an Intl formatter that also includes seconds\r\n  const formatter = new Intl.DateTimeFormat('en-US', {\r\n    timeZone: selectedTimezone.value,\r\n    year:     'numeric',\r\n    month:    '2-digit',\r\n    day:      '2-digit',\r\n    hour:     '2-digit',\r\n    minute:   '2-digit',\r\n    second:   '2-digit',\r\n    hour12:   is12HourFormat.value\r\n  })\r\n\r\n  // 3) break the formatted string into parts\r\n  const parts = formatter.formatToParts(date)\r\n  const data = {}\r\n  parts.forEach(part => {\r\n    switch (part.type) {\r\n      case 'year':      data.year   = part.value; break\r\n      case 'month':     data.month  = part.value; break\r\n      case 'day':       data.day    = part.value; break\r\n      case 'hour':      data.hour   = part.value; break\r\n      case 'minute':    data.minute = part.value; break\r\n      case 'second':    data.second = part.value; break\r\n      case 'dayPeriod': data.period = part.value; break\r\n      // ignore literals\r\n    }\r\n  })\r\n\r\n  // 4) write into the reactive object\r\n  timeData.value = data\r\n}\r\n\r\n// Called when the user picks a new timezone\r\nconst updateTime = () => {\r\n  refreshTime()\r\n  emit('timezoneSelected', selectedTimezone.value)\r\n}\r\n\r\n// Called when the user toggles 12h/24h format\r\nconst onFormatChange = () => {\r\n  refreshTime()\r\n  emit('formatSelected', is12HourFormat.value ? '12h' : '24h')\r\n}\r\n\r\n// Called when the user changes the offset\r\nconst onOffsetChange = () => {\r\n  refreshTime()\r\n  emit('offsetSelected', offset.value)\r\n}\r\n\r\n// Method exposed to parent: send the time array (including seconds) to ESP32\r\nasync function sendTimeArray() {\r\n  // rebuild the date exactly as in refreshTime()\r\n  const nowWithOffset = Date.now() + offset.value * 60 * 60 * 1000;\r\n  const date = new Date(nowWithOffset);\r\n\r\n  // ask Intl for a 24-hour hour, ignoring the 12/24 toggle\r\n  const hour24 = new Intl.DateTimeFormat('en-US', {\r\n    timeZone: selectedTimezone.value,\r\n    hour:     '2-digit',\r\n    hour12:   false\r\n  }).format(date);\r\n\r\n  // now build your array, using `hour24` instead of `timeData.value.hour`\r\n  const fullYear    = parseInt(timeData.value.year, 10);\r\n  const twoDigitYear = fullYear % 100;      // np. 2025 % 100 = 25\r\n\r\n  const timeArray = [\r\n    parseInt(timeData.value.second,10),\r\n    parseInt(timeData.value.minute, 10),\r\n    parseInt(hour24,               10),   // ← always 00–23\r\n    parseInt(timeData.value.day,   10),\r\n    parseInt(timeData.value.month, 10),\r\n    twoDigitYear\r\n  ];\r\n\r\n  console.log('Sending timeArray:', timeArray);\r\n\r\n  try {\r\n    const response = await fetch('/api/v1/clock', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(timeArray)\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok')\r\n    console.log('Time data sent successfully')\r\n  } catch (error) {\r\n    console.error('Error sending time data:', error)\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // Populate timezone list (use full Intl if available)\r\n  if (typeof Intl.supportedValuesOf === 'function') {\r\n    timezones.value = Intl.supportedValuesOf('timeZone')\r\n  } else {\r\n    timezones.value = [\r\n      'Europe/London',\r\n      'Europe/Amsterdam',\r\n      'America/New_York',\r\n      'Asia/Tokyo',\r\n      'Australia/Sydney'\r\n    ]\r\n  }\r\n\r\n  // Pick the first timezone by default\r\n  if (timezones.value.length) {\r\n    selectedTimezone.value = timezones.value[0]\r\n    updateTime()\r\n  }\r\n\r\n  // Start a 1-second interval to update the display every second\r\n  timer = setInterval(refreshTime, 1000)\r\n\r\n  // Apply any saved general config from props\r\n  const gen = props.initialGeneralConfig\r\n  if (gen.time_zone && timezones.value.includes(gen.time_zone)) {\r\n    selectedTimezone.value = gen.time_zone\r\n  } else {\r\n    selectedTimezone.value = timezones.value[0]\r\n  }\r\n  emit('timezoneSelected', selectedTimezone.value)\r\n\r\n  // Apply config overrides if present\r\n  const cfg = props.initialConfig\r\n  offset.value = typeof cfg.offset === 'number' ? cfg.offset : 0\r\n  emit('offsetSelected', offset.value)\r\n\r\n  if (cfg.time_format === '12h')      is12HourFormat.value = true\r\n  else if (cfg.time_format === '24h') is12HourFormat.value = false\r\n  emit('formatSelected', is12HourFormat.value ? '12h' : '24h')\r\n\r\n  if (cfg.clock_unit && units.includes(cfg.clock_unit)) {\r\n    selectedUnit.value = cfg.clock_unit\r\n  }\r\n  emit('unitSelected', selectedUnit.value)\r\n})\r\n\r\nonUnmounted(() => {\r\n  clearInterval(timer)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.format-toggle,\r\n.unit-select {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  margin-top: 0;\r\n  width: 50px;\r\n  height: 24px;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0; left: 0; right: 0; bottom: 0;\r\n  background-color: #ccc;\r\n  transition: 0.4s;\r\n  border-radius: 24px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 20px;\r\n  width: 20px;\r\n  left: 2px;\r\n  bottom: 2px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.switch input:checked + .slider {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.switch input:checked + .slider:before {\r\n  transform: translateX(26px);\r\n}\r\n\r\n.current-time-style {\r\n  text-align: center;\r\n}\r\n\r\n.current-time-style .time {\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n}\r\n\r\nlabel {\r\n  color: #333;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","import script from \"./TimeMode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimeMode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimeMode.vue?vue&type=style&index=0&id=f5798e48&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f5798e48\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"api-config-component\">\r\n    <div class=\"form-field\">\r\n      <label>Endpoint URL:</label>\r\n      <input\r\n        v-model=\"endpointUrl\"\r\n        type=\"url\"\r\n        placeholder=\"https://api.example.com/endpoint\"\r\n      />\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>HTTP Method:</label>\r\n      <select v-model=\"httpMethod\">\r\n        <option>GET</option>\r\n        <option>POST</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Headers (JSON):</label>\r\n      <textarea\r\n        v-model=\"headersText\"\r\n        placeholder='{\"Authorization\": \"Bearer TOKEN\", \"Accept\": \"application/json\"}'\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"form-field\" v-if=\"httpMethod === 'POST'\">\r\n      <label>Request Body (JSON):</label>\r\n      <textarea\r\n        v-model=\"requestBody\"\r\n        placeholder='{\"key\": \"value\"}'\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Response Format:</label>\r\n      <select v-model=\"responseFormat\">\r\n        <option value=\"json\">JSON</option>\r\n        <option value=\"xml\">XML</option>\r\n        <option value=\"text\">Text</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Response Key Path:</label>\r\n      <input\r\n        v-model=\"responseKeyPath\"\r\n        type=\"text\"\r\n        placeholder=\"data.field.subfield\"\r\n      />\r\n    </div>\r\n    <div class=\"form-field\">\r\n      <label>Polling Interval (minutes):</label>\r\n      <input v-model.number=\"pollInterval\" type=\"number\" min=\"1\" />\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <button type=\"submit\">SAVE</button>\r\n      <button @click=\"testFetch\" :disabled=\"isTesting\">Test</button>\r\n      <button type=\"button\" @click=\"closeModal\">CANCEL</button>\r\n    </div>\r\n\r\n    <!-- Modal for test result -->\r\n    <div\r\n      v-if=\"showTestModal\"\r\n      class=\"modal-backdrop\"\r\n      @mousedown.self=\"closeTestModal\"\r\n    >\r\n      <div class=\"modal\">\r\n        <h4>Test Result</h4>\r\n        <div class=\"modal-content\">\r\n          <pre>{{ formattedModalContent }}</pre>\r\n          <button @click=\"closeTestModal\">OK</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineEmits, defineExpose, computed, onMounted } from 'vue'\r\n\r\nconst props = defineProps({\r\n  initialConfig: {\r\n    type: Object,\r\n    default: () => ({})\r\n  }\r\n})\r\n\r\n// Reactive state for form fields\r\nconst endpointUrl     = ref('')\r\nconst httpMethod      = ref('GET')\r\nconst headersText     = ref('')\r\nconst requestBody     = ref('')\r\nconst responseFormat  = ref('json')\r\nconst responseKeyPath = ref('')\r\nconst pollInterval    = ref(60)\r\n\r\n// State for testing and modal\r\nconst isTesting       = ref(false)\r\nconst testResult      = ref(null)\r\nconst testError       = ref('')\r\nconst showTestModal   = ref(false)\r\nconst modalContent    = ref(null)\r\n\r\n// Emit configuration updates and close event to parent\r\nconst emits = defineEmits(['update:config', 'close'])\r\n\r\n// Initial initialization of fields from initialConfig\r\nonMounted(() => {\r\n  const cfg = props.initialConfig\r\n  if (cfg.endpoint)         endpointUrl.value     = cfg.endpoint\r\n  if (cfg.method)           httpMethod.value      = cfg.method\r\n  if (cfg.headers)          headersText.value     = JSON.stringify(cfg.headers, null, 2)\r\n  if (cfg.body != null)     requestBody.value     = JSON.stringify(cfg.body, null, 2)\r\n  if (cfg.responseFormat)   responseFormat.value  = cfg.responseFormat\r\n  if (cfg.responseKeyPath)  responseKeyPath.value = cfg.responseKeyPath\r\n  if (cfg.interval)         pollInterval.value    = cfg.interval\r\n})\r\n\r\nfunction closeModal() {\r\n  emits('close')\r\n}\r\n\r\nfunction buildConfigPayload() {\r\n  let headersObj = {}\r\n  if (headersText.value) {\r\n    try {\r\n      headersObj = JSON.parse(headersText.value)\r\n    } catch (e) {\r\n      throw new Error('Error parsing headers: ' + e.message)\r\n    }\r\n  }\r\n  let bodyObj = null\r\n  if (httpMethod.value === 'POST' && requestBody.value) {\r\n    try {\r\n      bodyObj = JSON.parse(requestBody.value)\r\n    } catch (e) {\r\n      throw new Error('Error parsing body: ' + e.message)\r\n    }\r\n  }\r\n  return {\r\n    endpoint: endpointUrl.value,\r\n    method: httpMethod.value,\r\n    headers: headersObj,\r\n    body: bodyObj,\r\n    responseFormat: responseFormat.value,\r\n    responseKeyPath: responseKeyPath.value,\r\n    interval: pollInterval.value\r\n  }\r\n}\r\n\r\ndefineExpose({ getConfig: buildConfigPayload })\r\n\r\n// Save configuration and emit to parent\r\nfunction sendConfigToDevice() {\r\n  try {\r\n    const configPayload = buildConfigPayload()\r\n    emits('update:config', configPayload)\r\n  } catch (e) {\r\n    testError.value = e.message\r\n    openModalWithContent(e.message)\r\n  }\r\n}\r\n\r\n// Test connection and display result in modal\r\nasync function testFetch() {\r\n  testError.value  = ''\r\n  testResult.value = null\r\n  isTesting.value  = true\r\n\r\n  try {\r\n    const options = { method: httpMethod.value, headers: {} }\r\n    if (headersText.value) {\r\n      options.headers = JSON.parse(headersText.value)\r\n    }\r\n    if (httpMethod.value === 'POST') {\r\n      options.headers['Content-Type'] = 'application/json'\r\n      if (requestBody.value) {\r\n        options.body = JSON.stringify(JSON.parse(requestBody.value))\r\n      }\r\n    }\r\n\r\n    const response = await fetch(endpointUrl.value, options)\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`)\r\n\r\n    let data =\r\n      responseFormat.value === 'text'\r\n        ? await response.text()\r\n        : responseFormat.value === 'xml'\r\n          ? new DOMParser().parseFromString(await response.text(), 'application/xml')\r\n          : await response.json()\r\n\r\n    let result = data\r\n    if (responseKeyPath.value) {\r\n      responseKeyPath.value.split('.').forEach((key) => {\r\n        result = result[key]\r\n      })\r\n    }\r\n    testResult.value = result\r\n  } catch (error) {\r\n    testError.value = error.message\r\n  } finally {\r\n    isTesting.value = false\r\n    const content =\r\n      testError.value ||\r\n      (typeof testResult.value === 'object'\r\n        ? JSON.stringify(testResult.value, null, 2)\r\n        : testResult.value)\r\n    openModalWithContent(content)\r\n  }\r\n}\r\n\r\n// Helper to open modal with given content\r\nfunction openModalWithContent(content) {\r\n  modalContent.value  = content\r\n  showTestModal.value = true\r\n}\r\n\r\n// Close test result modal\r\nfunction closeTestModal() {\r\n  showTestModal.value = false\r\n}\r\n\r\n// Computed for formatted modal content\r\nconst formattedModalContent = computed(() => modalContent.value)\r\n</script>\r\n\r\n<style>\r\n.api-config-component {\r\n  max-width: 420px;\r\n  background: #ffffff;\r\n  text-align: left;\r\n  border-radius: 10px;\r\n}\r\n\r\nlabel {\r\n  color: #333333;\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput,\r\nselect,\r\ntextarea {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #dddddd;\r\n  color: #555555;\r\n}\r\n\r\nbutton {\r\n  background: #40464e;\r\n  border: none;\r\n  width: 80px;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: #ffffff;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.error {\r\n  color: #ff0062;\r\n  margin-top: 10px;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.modal-content {\r\n  text-align: left;\r\n}\r\n\r\n.modal-content pre {\r\n  background: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  text-align: left;\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n\r\n.modal-content button {\r\n  margin-top: 20px;\r\n  background: #40464e;\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n</style>\r\n","import script from \"./GeneralApi.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GeneralApi.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GeneralApi.vue?vue&type=style&index=0&id=cbccfed8&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"timer-settings\">\r\n    <!-- Buttons to switch modes -->\r\n    <div class=\"button-row\">\r\n      <button\r\n        type=\"button\"\r\n        @click.stop=\"state.mode = 'simple'\"\r\n        :class=\"state.mode === 'simple' ? 'active-button' : 'inactive-button'\"\r\n      >\r\n        SIMPLE TIMER\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        @click.stop=\"state.mode = 'advanced'\"\r\n        :class=\"state.mode === 'advanced' ? 'active-button' : 'inactive-button'\"\r\n      >\r\n        ADVANCED TIMER\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Simple Timer Options -->\r\n    <div v-if=\"state.mode === 'simple'\" class=\"options\">\r\n      <div class=\"option\">\r\n        <label>From</label>\r\n        <input\r\n          type=\"number\"\r\n          v-model=\"state.simple.from\"\r\n          placeholder=\"e.g. 0\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>To</label>\r\n        <input\r\n          type=\"number\"\r\n          v-model=\"state.simple.to\"\r\n          placeholder=\"e.g. 10\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Interval</label>\r\n        <select v-model=\"state.simple.intervalUnit\" required>\r\n          <option value=\"s\">seconds</option>\r\n          <option value=\"m\">minutes</option>\r\n          <option value=\"h\">hours</option>\r\n          <option value=\"d\">days</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Alarm</label>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" v-model=\"state.simple.alarm\" />\r\n          <span class=\"slider\"></span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Advanced Timer Options -->\r\n    <div v-else class=\"options\">\r\n      <div class=\"option\">\r\n        <label>Cycles</label>\r\n        <input\r\n          type=\"number\"\r\n          v-model=\"state.advanced.cycles\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Work</label>\r\n        <input\r\n          type=\"number\"\r\n          v-model=\"state.advanced.work\"\r\n          placeholder=\"e.g. 60\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Rest</label>\r\n        <input\r\n          type=\"number\"\r\n          v-model=\"state.advanced.rest\"\r\n          placeholder=\"e.g. 30\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Interval</label>\r\n        <select v-model=\"state.advanced.intervalUnit\" required>\r\n          <option value=\"s\">seconds</option>\r\n          <option value=\"m\">minutes</option>\r\n          <option value=\"h\">hours</option>\r\n          <option value=\"d\">days</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Show current cycle</label>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" v-model=\"state.advanced.showCurrentCycle\" />\r\n          <span class=\"slider\"></span>\r\n        </label>\r\n      </div>\r\n      <div class=\"option\">\r\n        <label>Alarm</label>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" v-model=\"state.advanced.alarm\" />\r\n          <span class=\"slider\"></span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, defineProps, reactive, watch } from 'vue'\r\n\r\nconst props = defineProps({\r\n  initialConfig: {\r\n    type: Object,\r\n    default: () => ({})\r\n  }\r\n})\r\n\r\n// Emit event to send updated settings to parent\r\nconst emit = defineEmits(['update:settings'])\r\n\r\nconst state = reactive({\r\n  mode: 'simple',\r\n  simple: {\r\n    from: '0',\r\n    to: '0',\r\n    intervalUnit: 's',\r\n    alarm: false\r\n  },\r\n  advanced: {\r\n    cycles: '1',\r\n    showCurrentCycle: false,\r\n    work: '0',\r\n    rest: '0',\r\n    alarm: false,\r\n    intervalUnit: 's'\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  const cfg = props.initialConfig\r\n  if (cfg.type === 'simple') {\r\n    state.mode = 'simple'\r\n    if (cfg.from) state.simple.from = cfg.from\r\n    if (cfg.to) state.simple.to = cfg.to\r\n    if (cfg.intervalUnit) state.simple.intervalUnit = cfg.intervalUnit\r\n    if (cfg.alarm !== undefined) state.simple.alarm = cfg.alarm\r\n  } else if (cfg.type === 'advanced') {\r\n    state.mode = 'advanced'\r\n    if (cfg.cycles) state.advanced.cycles = cfg.cycles\r\n    if (cfg.showCurrentCycle !== undefined)\r\n      state.advanced.showCurrentCycle = cfg.showCurrentCycle\r\n    if (cfg.work) state.advanced.work = cfg.work\r\n    if (cfg.rest) state.advanced.rest = cfg.rest\r\n    if (cfg.alarm !== undefined) state.advanced.alarm = cfg.alarm\r\n    if (cfg.intervalUnit) state.advanced.intervalUnit = cfg.intervalUnit\r\n  }\r\n})\r\n\r\n// Watch only the active branch (simple or advanced) and emit flattened settings\r\nwatch(\r\n  () => (state.mode === 'simple' ? state.simple : state.advanced),\r\n  (activeSettings) => {\r\n    emit('update:settings', {\r\n      mode: 'timer',\r\n      type: state.mode,\r\n      ...activeSettings\r\n    })\r\n  },\r\n  {\r\n    deep: true,\r\n    immediate: true\r\n  }\r\n)\r\n</script>\r\n\r\n<style scoped>\r\n.button-row {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n}\r\n\r\n.active-button {\r\n  background-color: #007bff;\r\n}\r\n\r\n.inactive-button {\r\n  background-color: #6c757d;\r\n}\r\n\r\n.options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\nlabel {\r\n  width: 140px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type='number'],\r\nselect {\r\n  flex: 1;\r\n  padding: 4px 8px;\r\n}\r\n\r\n/* Toggle switch styles */\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 20px;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #6c757d;\r\n  transition: 0.4s;\r\n  border-radius: 20px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 2px;\r\n  bottom: 2px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.switch input:checked + .slider {\r\n  background-color: #007bff;\r\n}\r\n\r\n.switch input:checked + .slider:before {\r\n  transform: translateX(20px);\r\n}\r\n</style>\r\n","import script from \"./TimerMode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimerMode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimerMode.vue?vue&type=style&index=0&id=1017cbad&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1017cbad\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"mqtt-data\">\r\n    <div class=\"enable-toggle\">\r\n      <label for=\"enable-switch\">Enable MQTT</label>\r\n      <label class=\"switch\">\r\n        <input\r\n          id=\"enable-switch\"\r\n          type=\"checkbox\"\r\n          v-model=\"config.enabled\"\r\n          @change=\"onInputChange\"\r\n        />\r\n        <span class=\"slider\"></span>\r\n      </label>\r\n    </div>\r\n\r\n    <div class=\"settings\" v-if=\"config.enabled\">\r\n      <div class=\"field\">\r\n        <label for=\"broker\">Broker Address:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"broker\"\r\n          v-model=\"config.broker\"\r\n          @input=\"onInputChange\"\r\n          placeholder=\"mqtt.example.com\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label for=\"port\">Port Number:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"port\"\r\n          v-model.number=\"config.port\"\r\n          @input=\"onInputChange\"\r\n          placeholder=\"1883\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label for=\"login\">Login:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"login\"\r\n          v-model=\"config.login\"\r\n          @input=\"onInputChange\"\r\n          placeholder=\"username\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label for=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"config.password\"\r\n          @input=\"onInputChange\"\r\n          placeholder=\"••••••••\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-row\">\r\n      <button\r\n        v-if=\"showSaveButton\"\r\n        type=\"button\"\r\n        @click=\"saveConfig\"\r\n      >\r\n        {{ saveButtonLabel }}\r\n      </button>\r\n      <!-- <button\r\n        type=\"button\"\r\n        @click=\"$emit('close')\"\r\n      >\r\n        CANCEL\r\n      </button> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\n// Emit only 'close' so that SettingsModal can close the MQTT section\r\nconst emit = defineEmits(['close'])\r\n\r\n// Reactive MQTT configuration object\r\nconst config = ref({\r\n  enabled: false,\r\n  broker: '',\r\n  port: '',\r\n  login: '',\r\n  password: ''\r\n})\r\n\r\nconst showSaveButton = ref(false)\r\nconst saveButtonLabel = ref('SEND CONFIG')\r\nconst message = ref('')\r\n\r\n// Fetch existing MQTT configuration on mount\r\nasync function fetchConfig() {\r\n  try {\r\n    const response = await fetch('/api/v1/mqtt')\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch configuration')\r\n    }\r\n    const data = await response.json()\r\n    config.value.enabled = data.enabled\r\n    config.value.broker = data.broker\r\n    config.value.port = data.port\r\n    config.value.login = data.login\r\n    config.value.password = data.password\r\n  } catch (error) {\r\n    message.value = error.message\r\n  }\r\n}\r\n\r\n// Show SAVE button when any input changes\r\nfunction onInputChange() {\r\n  showSaveButton.value = true\r\n}\r\n\r\n// Save configuration via POST\r\nasync function saveConfig() {\r\n  try {\r\n    const payload = {\r\n      enabled: config.value.enabled,\r\n      broker: config.value.broker,\r\n      port: config.value.port,\r\n      login: config.value.login,\r\n      password: config.value.password\r\n    }\r\n    const response = await fetch('/api/v1/mqtt', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload)\r\n    })\r\n    if (!response.ok) {\r\n      const errText = await response.text()\r\n      throw new Error(errText || 'Failed to save configuration')\r\n    }\r\n    message.value = 'Configuration saved successfully'\r\n    saveButtonLabel.value = 'SAVED'\r\n    showSaveButton.value = false\r\n  } catch (error) {\r\n    message.value = error.message\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchConfig()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.enable-toggle {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.enable-toggle label:first-of-type {\r\n  color: #333;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  margin-top: 0;\r\n  width: 50px;\r\n  height: 24px;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0; left: 0; right: 0; bottom: 0;\r\n  background-color: #ccc;\r\n  transition: 0.4s;\r\n  border-radius: 24px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 20px;\r\n  width: 20px;\r\n  left: 2px;\r\n  bottom: 2px;\r\n  background-color: white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.switch input:checked + .slider {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.switch input:checked + .slider:before {\r\n  transform: translateX(26px);\r\n}\r\n\r\n.field {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.field label {\r\n  display: block;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 4px;\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n\r\n.field input[type=\"text\"],\r\n.field input[type=\"number\"],\r\n.field input[type=\"password\"] {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #9c9c9c;\r\n  color: #383838;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  /* justify-content: flex-end; */\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.button-row button {\r\n  background: #40464e;\r\n  border: none;\r\n  width: 110px;\r\n  padding: 10px 16px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n}\r\n\r\n.button-row button:hover {\r\n  opacity: 0.9;\r\n}\r\n</style>\r\n","import script from \"./MqttData.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MqttData.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MqttData.vue?vue&type=style&index=0&id=0aa582f3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0aa582f3\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backdrop\" @mousedown.self=\"closeModal\">\r\n    <div class=\"modal\">\r\n      <!-- MQTT mode -->\r\n      <form @submit.prevent=\"save\" v-if=\"mode === 'mqtt'\">\r\n        <h3>MQTT Settings</h3>\r\n        <div class=\"information-style\">\r\n          <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\" />\r\n          <p>Begin by enabling MQTT mode. Next, enter the MQTT broker information and user credentials (if applicable). The final step is to specify the TOPIC—it must match exactly the one that will be sent (for example, from Home Assistant).</p>\r\n        </div>\r\n        <MqttData @close=\"closeModal\" />\r\n        <label for=\"topicInput\">Topic:</label>\r\n        <input type=\"text\" id=\"topicInput\" v-model=\"topicValue\" required />\r\n        <div class=\"button-row\">\r\n          <button type=\"submit\">SAVE</button>\r\n          <button type=\"button\" @click=\"closeModal\">CANCEL</button>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- CLOCK mode -->\r\n      <form @submit.prevent=\"save\" v-if=\"mode === 'clock'\">\r\n        <h3>Clock Settings</h3>\r\n        <div class=\"information-style\">\r\n          <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\" />\r\n          <p>First, select the appropriate time zone (it’s set globally, so it will apply when you choose this mode for another group). If needed, set the hour offset and choose either 12-hour or 24-hour format. Finally, select what you want to display: minutes, hours, seconds, days, months or years.</p>\r\n        </div>\r\n        <TimeMode\r\n          ref=\"timeModeRef\"\r\n          :initialConfig=\"groupData\"\r\n          :initialGeneralConfig=\"general\"\r\n          @unitSelected=\"clockUnit = $event\"\r\n          @formatSelected=\"timeFormat = $event\"\r\n          @timezoneSelected=\"onTimezoneSelected\"\r\n          @offsetSelected=\"onOffsetSelected\"\r\n        />\r\n        <div class=\"button-row\">\r\n          <button type=\"submit\">SAVE</button>\r\n          <button type=\"button\" @click=\"closeModal\">CANCEL</button>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- TIMER mode -->\r\n      <form @submit.prevent=\"save\" v-if=\"mode === 'timer'\">\r\n        <h3>Timer Settings</h3>\r\n        <div class=\"information-style\">\r\n          <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\" />\r\n          <p>The SIMPLE TIMER counts from any starting value to any ending value. It can count up or down. The interval defines how often the value changes. An alarm will sound when the timer completes. The ADVANCED TIMER lets you set the work duration, break duration, and number of cycles. You can also display the current cycle before the timer itself.\r\n</p>\r\n        </div>\r\n        <TimerMode :initialConfig=\"groupData\" @update:settings=\"onSettingsUpdate\" />\r\n        <div class=\"button-row\">\r\n          <button type=\"submit\">SAVE</button>\r\n          <button type=\"button\" @click=\"closeModal\">CANCEL</button>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- MANUAL mode -->\r\n      <form @submit.prevent=\"save\" v-if=\"mode === 'manual'\">\r\n        <h3>Manual Settings</h3>\r\n        <div class=\"information-style\">\r\n          <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\" />\r\n          <p>To change what appears on the display, click on individual segments to toggle them on or off.</p>\r\n        </div>\r\n        <div class=\"button-row\">\r\n          <button type=\"submit\">OK</button>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- CUSTOM API mode -->\r\n      <form @submit.prevent=\"save\" v-if=\"mode === 'custom-api'\">\r\n        <h3>Custom API (advanced)</h3>\r\n        <div class=\"information-style\">\r\n          <img :src=\"require('@/assets/information-icon.png')\" alt=\"Information\" />\r\n          <p>To fetch information from any API, provide its URL, then select the HTTP method. If access to this API is protected by a key, include it in the HEADERS section. To extract the specific value from the full JSON object, enter its path in the RESPONSE KEY PATH field. Finally, specify how often this value should be retrieved.</p>\r\n        </div>\r\n        <GeneralApi ref=\"apiModeRef\" :initialConfig=\"groupData\" @close=\"closeModal\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits, ref, onMounted, computed } from 'vue'\r\nimport TimeMode from './TimeMode.vue'\r\nimport GeneralApi from './GeneralApi.vue'\r\nimport TimerMode from './TimerMode.vue'\r\nimport MqttData from './MqttData.vue'\r\n\r\n// Prop: externalConfig from parent (Mode.vue)\r\nconst props = defineProps({\r\n  groupKey: { type: String, required: true },\r\n  mode: { type: String, required: true },\r\n  aggregatedData: { type: Object, required: true }\r\n})\r\n\r\n// Emit events to parent\r\nconst emits = defineEmits(['close', 'save'])\r\n\r\n// Computed: data for this group\r\nconst groupData = computed(() => props.aggregatedData.groups[props.groupKey] || {})\r\n// Computed: global settings\r\nconst general = computed(() => props.aggregatedData.general || {})\r\n// Reactive for global timezone\r\nconst timeZone = ref(general.value.time_zone || '')\r\n// Reactive for offset value\r\nconst offsetValue = ref(groupData.value.offset ?? 0)\r\n\r\n// Handle timezone selected in TimeMode child\r\nfunction onTimezoneSelected(tz) {\r\n  timeZone.value = tz\r\n}\r\n\r\n// Handle offset selected in TimeMode child\r\nfunction onOffsetSelected(val) {\r\n  offsetValue.value = val\r\n}\r\n\r\n// Reactive vars for user input and child refs\r\nconst topicValue = ref('')\r\nconst clockUnit = ref('hours')\r\nconst timeFormat = ref('24h')\r\nconst timeModeRef = ref(null)\r\nconst apiModeRef = ref(null)\r\n\r\n// Reactive holder for TimerMode data\r\nconst timerSettings = ref({\r\n  mode: 'simple',\r\n  simple: {\r\n    from: '',\r\n    to: '',\r\n    intervalValue: '',\r\n    intervalUnit: 'seconds',\r\n    alarm: false\r\n  },\r\n  advanced: {\r\n    cycles: '',\r\n    showCurrentCycle: false,\r\n    work: '',\r\n    rest: '',\r\n    alarm: false,\r\n    intervalValue: '',\r\n    intervalUnit: 'seconds'\r\n  }\r\n})\r\n\r\n// Initialize topicValue from aggregatedData\r\nfunction initTopic() {\r\n  if (props.mode === 'mqtt') {\r\n    const group = props.aggregatedData.groups[props.groupKey] || {}\r\n    topicValue.value = group.topic ?? ''\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  initTopic()\r\n})\r\n\r\n// Handle updated settings from TimerMode child\r\nconst onSettingsUpdate = (settings) => {\r\n  timerSettings.value = settings\r\n}\r\n\r\n// Close the modal\r\nconst closeModal = () => {\r\n  emits('close')\r\n}\r\n\r\n// Save handler: clean up and assign values based on mode\r\nconst save = () => {\r\n  const group = props.aggregatedData.groups[props.groupKey]\r\n  const baseKeys = ['start_position', 'end_position', 'pattern', 'separator', 'mode']\r\n\r\n  if (props.mode === 'mqtt') {\r\n    const allowed = [...baseKeys, 'topic']\r\n    Object.keys(group).forEach(key => {\r\n      if (!allowed.includes(key)) delete group[key]\r\n    })\r\n    group.topic = topicValue.value\r\n\r\n  } else if (props.mode === 'clock') {\r\n    const allowed = [...baseKeys, 'clock_unit', 'time_format', 'time_zone', 'offset']\r\n    Object.keys(group).forEach(key => {\r\n      if (!allowed.includes(key)) delete group[key]\r\n    })\r\n    group.clock_unit = clockUnit.value\r\n    group.time_format = timeFormat.value\r\n    group.offset = offsetValue.value\r\n    props.aggregatedData.general.time_zone = timeZone.value\r\n\r\n    if (timeModeRef.value) timeModeRef.value.sendTimeArray()\r\n\r\n  } else if (props.mode === 'timer') {\r\n    // Determine allowed keys based on timerSettings\r\n    const settingKeys = Object.keys(timerSettings.value).filter(key => key !== 'mode')\r\n    const allowed = [...baseKeys, 'mode', ...settingKeys]\r\n    Object.keys(group).forEach(key => {\r\n      if (!allowed.includes(key)) delete group[key]\r\n    })\r\n    group.mode = timerSettings.value.mode\r\n    const { mode, ...rest } = timerSettings.value\r\n    Object.assign(group, rest)\r\n\r\n  } else if (props.mode === 'custom-api') {\r\n    const allowed = [...baseKeys, 'endpoint', 'method', 'headers', 'body', 'responseFormat', 'responseKeyPath', 'interval']\r\n    Object.keys(group).forEach(key => {\r\n      if (!allowed.includes(key)) delete group[key]\r\n    })\r\n    if (apiModeRef.value && apiModeRef.value.getConfig) {\r\n      const apiConfig = apiModeRef.value.getConfig()\r\n      Object.assign(group, apiConfig)\r\n    }\r\n\r\n  } else if (props.mode === 'manual') {\r\n    const allowed = [...baseKeys, 'endpoint', 'method', 'headers', 'body', 'responseFormat', 'responseKeyPath', 'interval']\r\n    Object.keys(group).forEach(key => {\r\n      if (!allowed.includes(key)) delete group[key]\r\n    })\r\n  }\r\n\r\n  emits('save', props.aggregatedData)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  z-index: 10000;\r\n}\r\n\r\n.backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 9999;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton {\r\n  background: #40464e;\r\n  border: none;\r\n  width: 80px;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 0.7em;\r\n  text-transform: uppercase;\r\n}\r\n\r\nimg {\r\n  width: 20px;\r\n  height: auto;\r\n  object-fit: contain;\r\n  margin: 10px 10px 0 10px;\r\n}\r\n\r\n.information-style {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  color: #000000;\r\n  border-radius: 10px;\r\n  font-size: 0.8em;\r\n  background-color: antiquewhite;\r\n}\r\n\r\nlabel {\r\n  color: #333;\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.6em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput,\r\nselect {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #9c9c9c;\r\n  color: #383838;\r\n}\r\n</style>\r\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=2969cf83&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2969cf83\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <button class=\"submit\" @click=\"sendAggregatedData\">\r\n      Send\r\n    </button>\r\n    <!-- Common scroll wrapper for both Display and mode panels -->\r\n    <div class=\"scroll-wrapper\">\r\n      <div class=\"combined-content\">\r\n        <!-- Display component container -->\r\n        <div class=\"display-wrapper\">\r\n          <Display\r\n            :externalConfig=\"aggregatedData\"\r\n            @update-display-data=\"handleUpdateDisplayData\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Mode panels container: arranged horizontally with no wrapping -->\r\n        <div v-if=\"aggregatedData && aggregatedData.groups\" class=\"modes-wrapper\">\r\n          <!-- Iterate over groups using computed groupsList -->\r\n          <div\r\n            v-for=\"([groupKey, group]) in groupsList\"\r\n            :key=\"groupKey\"\r\n            class=\"group-panel\"\r\n          >\r\n            <!-- Mode panel with dropdown and button; width based on number of displays -->\r\n            <div class=\"mode-panel\" :style=\"{ width: groupWidth(group) }\">\r\n              <div class=\"dropdown\">\r\n                <button class=\"dropbtn\" @click=\"toggleDropdown($event, groupKey)\">\r\n                  {{ group.mode || 'none' }}\r\n                </button>\r\n              </div>\r\n              <button class=\"option-btn\" @click=\"handleButtonClick(groupKey, group.mode)\">\r\n                <img :src=\"require('@/assets/gear_2.png')\" class=\"gear-style\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Debug: display aggregated data -->\r\n    <!-- <pre>{{ aggregatedData }}</pre>\r\n    <br /><br /><br /> -->\r\n\r\n    <!-- Teleport dropdown menu to body to always be on top -->\r\n    <teleport to=\"body\">\r\n      <div v-for=\"([groupKey, group]) in groupsList\" :key=\"'dropdown-' + groupKey\">\r\n        <div\r\n          v-if=\"dropdownOpen[groupKey]\"\r\n          class=\"dropdown-content-teleport\"\r\n          :style=\"getDropdownStyle(groupKey)\"\r\n          @mouseleave=\"closeDropdown(groupKey)\"\r\n        >\r\n          <a\r\n            v-for=\"mode in modes\"\r\n            :key=\"mode\"\r\n            href=\"#\"\r\n            @click.prevent=\"selectMode(groupKey, mode)\"\r\n          >\r\n            {{ mode }}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </teleport>\r\n  </div>\r\n\r\n  <SettingsModal\r\n    v-if=\"showSettingsModal\"\r\n    :groupKey=\"currentModal.groupKey\"\r\n    :mode=\"currentModal.mode\"\r\n    :aggregatedData=\"aggregatedData\"\r\n    @close=\"showSettingsModal = false\"\r\n    @save=\"handleModalSave\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport Display from './Display.vue'\r\nimport SettingsModal from './SettingsModal.vue'\r\n\r\n// Reactive variable to store display configuration data\r\nconst aggregatedData = ref(null)\r\n\r\n// Reactive objects to store the state of dropdowns and their positions (for each group)\r\nconst dropdownOpen = ref({})\r\nconst dropdownPosition = ref({})\r\n\r\n// Available modes\r\nconst modes = ['none', 'manual', 'mqtt', 'timer', 'clock', 'custom-api']\r\n\r\n// Reactive variable controlling modal visibility and current data for the modal\r\nconst showSettingsModal = ref(false)\r\nconst currentModal = ref({ groupKey: null, mode: null })\r\n\r\n// New function\r\n// Upon receiving an updated object from Display.vue, immediately overwrite the entire aggregatedData.value.\r\n// This ensures that every change in Display.vue (polling, click) is fully adopted without manually merging objects.\r\nconst handleUpdateDisplayData = (data) => {\r\n  aggregatedData.value = {\r\n    ...data,\r\n    general: {\r\n      ...data.general,\r\n      groups: Object.keys(data.groups).length\r\n    }\r\n  }\r\n  // Note: The \"mode\" of other groups (set in the configuration) was already included in data.groups, so it's preserved.\r\n}\r\n\r\n// Computed property to get an array of [groupKey, group] pairs\r\nconst groupsList = computed(() => {\r\n  if (!aggregatedData.value || !aggregatedData.value.groups) return []\r\n  return Object.entries(aggregatedData.value.groups)\r\n})\r\n\r\n// Calculate the width of a group's panel based on the number of displays (each display is 210px)\r\nconst groupWidth = (group) => {\r\n  const numDisplays = group.end_position - group.start_position\r\n  return (numDisplays + 1) * 210 + 'px'\r\n}\r\n\r\n// Toggle dropdown open/close state for a specific group and calculate button position\r\nconst toggleDropdown = (event, groupKey) => {\r\n  dropdownOpen.value[groupKey] = !dropdownOpen.value[groupKey]\r\n  if (dropdownOpen.value[groupKey]) {\r\n    const rect = event.target.getBoundingClientRect()\r\n    dropdownPosition.value[groupKey] = {\r\n      top: rect.bottom,\r\n      left: rect.left,\r\n      width: rect.width\r\n    }\r\n  }\r\n}\r\n\r\n// Return computed style for dropdown content based on stored position\r\nconst getDropdownStyle = (groupKey) => {\r\n  const pos = dropdownPosition.value[groupKey] || { top: 0, left: 0, width: 'auto' }\r\n  return {\r\n    position: 'fixed',\r\n    top: pos.top + 'px',\r\n    left: pos.left + 'px',\r\n    width: pos.width + 'px',\r\n    backgroundColor: '#e7e7e7',\r\n    borderRadius: '7px',\r\n    zIndex: 9999,\r\n    color: '#333',\r\n    fontSize: '0.9em',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '1px',\r\n    fontWeight: 'bold'\r\n  }\r\n}\r\n\r\n// Close dropdown for the given group key when the cursor leaves the menu area\r\nconst closeDropdown = (groupKey) => {\r\n  dropdownOpen.value[groupKey] = false\r\n}\r\n\r\n// Select a mode from the dropdown and close it afterwards\r\nconst selectMode = (groupKey, mode) => {\r\n  // Set the new mode for the given group\r\n  aggregatedData.value.groups[groupKey].mode = mode\r\n  dropdownOpen.value[groupKey] = false\r\n\r\n  if (mode !== 'none') {\r\n    currentModal.value = { groupKey, mode }\r\n    showSettingsModal.value = true\r\n  }\r\n  console.log(`Mode changed in group ${groupKey}:`, aggregatedData.value.groups[groupKey].mode)\r\n}\r\n\r\n// Handle button click (expand logic based on mode)\r\nconst handleButtonClick = (groupKey, mode) => {\r\n  if (mode !== 'none') {\r\n    currentModal.value = { groupKey, mode }\r\n    showSettingsModal.value = true\r\n  }\r\n  console.log('Button clicked for group:', groupKey, mode)\r\n}\r\n\r\nconst handleModalSave = (updatedData) => {\r\n  // After closing modal we may receive a completely new aggregatedData object\r\n  aggregatedData.value = updatedData\r\n  showSettingsModal.value = false\r\n}\r\n\r\n// Function to send aggregatedData to the ESP32 server\r\nconst sendAggregatedData = async () => {\r\n  if (!aggregatedData.value) {\r\n    alert('No configuration data to send.')\r\n    return\r\n  }\r\n\r\n  // Measure JSON serialization time\r\n  console.time('stringify')\r\n  const payload = JSON.stringify(aggregatedData.value)\r\n  console.timeEnd('stringify') // e.g., \"stringify: 3ms\"\r\n\r\n  try {\r\n    // Measure fetch time\r\n    const start = performance.now()\r\n    const response = await fetch('/api/v1/config', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: payload\r\n    })\r\n    const end = performance.now()\r\n    console.log(`Fetch took: ${(end - start).toFixed(1)} ms`)\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n\r\n    const result = await response.text() // server response as text\r\n    console.log('Server response:', result)\r\n    // optional: alert('Configuration sent successfully!')\r\n  } catch (error) {\r\n    console.error('Error sending configuration:', error)\r\n    alert('Failed to send configuration.')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Common scroll wrapper for Display and mode panels */\r\n.scroll-wrapper {\r\n  overflow-x: auto; /* Enable horizontal scrolling */\r\n  width: 100%;\r\n  text-align: center; /* Center content */\r\n}\r\n\r\n/* Combined content container */\r\n.combined-content {\r\n  display: inline-block; /* Shrinks to fit its content */\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Container for Display: arranges displays inline (106px gap) */\r\n.display-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 106px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Container for mode panels: horizontal no-wrap, 106px gap */\r\n.modes-wrapper {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  gap: 106px;\r\n  justify-content: center;\r\n}\r\n\r\n/* Mode panel (dropdown + button) */\r\n.mode-panel {\r\n  display: flex;\r\n  align-items: top;\r\n}\r\n\r\n/* Dropdown – button style */\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n/* Teleported menu – link style with shadow */\r\n.dropdown-content-teleport {\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.dropdown-content-teleport a {\r\n  color: #333;\r\n  padding: 12px 5px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  display: block;\r\n}\r\n\r\n.dropdown-content-teleport a:hover {\r\n  background-color: #a5a5a5;\r\n}\r\n\r\n/* Gear button */\r\n.option-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: 5px;\r\n  border-radius: 7px;\r\n  border: 3px solid #333;\r\n  background: #d9d5c7;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n}\r\n\r\n.gear-style {\r\n  scale: 0.8;\r\n}\r\n\r\n/* Dropdown button style */\r\n.dropbtn {\r\n  background-color: #333;\r\n  border-radius: 7px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #ebebeb;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\n.dropbtn:hover {\r\n  background: #424242;\r\n}\r\n\r\n/* SEND button */\r\n.submit {\r\n  float: right;\r\n  width: 200px;\r\n  background: #c02b2b;\r\n  border: 1;\r\n  margin: 3px 3px 70px 0;\r\n  padding: 10px;\r\n  color: white;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1.1em;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n.submit:hover {\r\n  background: #d63030;\r\n}\r\n</style>\r\n","import script from \"./Mode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Mode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Mode.vue?vue&type=style&index=0&id=0673b8a1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0673b8a1\"]])\n\nexport default __exports__","<template>\r\n  <footer class=\"footer\">\r\n    <img src=\"@/assets/ss4h_logo.png\" class=\"logo\" alt=\"Logo\" />\r\n    <p>Created by Sebastian Sokołowski from :</p>\r\n    <a href=\"https://smartsolutions4home.com\">https://smartsolutions4home.com</a>\r\n  </footer>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FooterComponent'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #f2f2f2;\r\n  box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #000000;\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n}\r\n\r\n.footer p,\r\n.footer a {\r\n  margin: 0 5px;\r\n}\r\n\r\n.logo {\r\n  scale: 0.5;\r\n  float: left;\r\n  margin-top: 0px;\r\n}\r\n</style>\r\n","import { render } from \"./Footer.vue?vue&type=template&id=7ff20a54&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=7ff20a54&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ff20a54\"]])\n\nexport default __exports__","<template>\n  <div class=\"app\">\n    <div class=\"top-bar\">\n      <button class=\"menu-btn\" @click=\"toggleWiFiModal\">\n        Wifi Settings\n      </button>    \n      <button class=\"menu-btn\" @click=\"toggleUpdateModal\">\n        Check for update\n      </button>  \n      <button class=\"menu-btn\" @click=\"toggleSettingsModal\">\n        Settings\n      </button>  \n      <button class=\"menu-btn\" onclick=\"window.open('https://www.smartsolutions4home.com//7-flip-display', '_blank')\">\n        WWW\n      </button>    \n      <!-- <button class=\"menu-btn\" onclick=\"window.open('https://PayPal.Me/ss4h', '_blank')\">\n          Donate\n      </button>            -->\n      <Mode />\n    </div>\n\n    <WifiConfig v-if=\"showWiFi === true\" @close=\"toggleWiFiModal\"/>\n    <UpdateCheck  v-if=\"showUpdate === true\" @close=\"toggleUpdateModal\"/> \n    <Settings  v-if=\"showSettings === true\" @close=\"toggleSettingsModal\"/> \n\n    <Footer />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport UpdateCheck from './components/UpdateCheck.vue';\nimport WifiConfig from './components/WifiConfig.vue';\nimport Settings from './components/Settings.vue';\nimport Mode from './components/Mode.vue';\nimport Footer from './components/Footer.vue';\n\nconst showWiFi = ref(false);\nconst showSettings = ref(false);\nconst showUpdate = ref(false);\n\nfunction toggleWiFiModal() {\n  showWiFi.value = !showWiFi.value;\n}\nfunction toggleUpdateModal() {\n  showUpdate.value = !showUpdate.value;\n}\nfunction toggleSettingsModal() {\n  showSettings.value = !showSettings.value;\n}\n\n</script>\n\n<style>\n#app {\n  padding-bottom: 60px; /* Footer high */\n}\nbody {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin: 0;\n  background: #dee3e9;\n  display: block;\n}\n.menu-btn {\n  float: left;\n  width: auto;\n  height: 40px;\n  background: #d9d5c7;\n  border: 10;\n  border-color: #333;\n  border-radius: 8px;\n  margin: 4px 3px 50px 3px;\n  padding: 8px;\n  color: #333;\n  cursor: pointer;\n  font-size: 1em;\n  font-weight: 550;\n  text-transform: uppercase;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.menu-btn:hover {\n  background: #a5a297;\n}\n\n.top-bar {\n  background-color: #f2f2f2; \n  height: 50px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4ff1c9a0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_7_flip_display\"] = self[\"webpackChunk_7_flip_display\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1829); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","installedFirmwareVersion","ref","installedWebAppVersion","availableFirmwareVersion","availableWebAppVersion","updateAvailable","firmwareState","webAppState","updateLabel","progress","showProgress","updateInProgress","emit","__emit","closeModal","async","fetchInstalledVersions","response","fetch","data","json","value","versions","firm_version","web_app_version","console","log","fetchAvailableVersions","firmware_version","checkForUpdate","progressInterval","startProgressPolling","setInterval","clearInterval","window","location","reload","startUpdate","needsFirmwareUpdate","needsWebAppUpdate","method","headers","body","JSON","stringify","firmware_url","web_app_url","text","url","onMounted","__exports__","mode","selectedMode","ssid","password","fetchConfig","ok","error","updateConfig","payload","message","alert","ledState","fetchLedState","status","updateLedState","newState","watch","newVal","oldVal","props","__props","SignValue","initialValue","activeSegments","reactive","A","Boolean","B","C","D","E","F","G","segmentsConfig","name","top","left","width","height","rotation","onSignalChange","toggleSegment","segmentName","editable","displayWidth","plusWidth","displayHeight","containerRef","jsonSettings","DisplayCount","separators","SignValues","options","contextMenu","visible","x","y","index","plusTop","fetchDisplaySettings","statusText","groupValues","values","groups","count","Math","max","g","end_position","Array","fill","key","group","start_position","separator","aggregateDisplaySettings","pollIntervalId","pollPattern","res","arr","anyChanged","i","length","getModeForIndex","then","onUnmounted","displayIndices","computed","from","_","getInitialValueFromConfig","idx","sort","a","b","localIndex","pattern","getDisplayValue","idx0","currentValue","undefined","totalDisplays","computedGroups","currentGroupStart","groupPattern","j","push","start","end","lastPattern","originalGroups","originalEntries","entries","updatedGroups","matchingOriginal","origGroup","newGroup","general","handleUpdateSignal","newValue","userChangedSeparator","selectSeparator","option","openContextMenu","event","preventDefault","rect","getBoundingClientRect","clientX","clientY","plusStyle","offset","document","addEventListener","externalConfig","newConfig","oldConfig","oldGroups","newGroups","oldMode","newMode","parse","grp","deep","immediate","__expose","sendTimeArray","timezones","selectedTimezone","is12HourFormat","units","selectedUnit","timeData","timer","refreshTime","nowWithOffset","Date","now","date","formatter","Intl","DateTimeFormat","timeZone","year","month","day","hour","minute","second","hour12","parts","formatToParts","forEach","part","type","period","updateTime","onFormatChange","onOffsetChange","hour24","format","fullYear","parseInt","twoDigitYear","timeArray","supportedValuesOf","gen","initialGeneralConfig","time_zone","includes","cfg","initialConfig","time_format","clock_unit","endpointUrl","httpMethod","headersText","requestBody","responseFormat","responseKeyPath","pollInterval","isTesting","testResult","testError","showTestModal","modalContent","emits","buildConfigPayload","headersObj","bodyObj","endpoint","interval","testFetch","DOMParser","parseFromString","result","split","content","openModalWithContent","closeTestModal","getConfig","formattedModalContent","state","simple","to","intervalUnit","alarm","advanced","cycles","showCurrentCycle","work","rest","activeSettings","config","enabled","broker","port","login","showSaveButton","saveButtonLabel","onInputChange","saveConfig","errText","groupData","aggregatedData","groupKey","offsetValue","onTimezoneSelected","tz","onOffsetSelected","val","topicValue","clockUnit","timeFormat","timeModeRef","apiModeRef","timerSettings","intervalValue","initTopic","topic","onSettingsUpdate","settings","save","baseKeys","allowed","settingKeys","filter","assign","apiConfig","dropdownOpen","dropdownPosition","modes","showSettingsModal","currentModal","handleUpdateDisplayData","groupsList","groupWidth","numDisplays","toggleDropdown","target","bottom","getDropdownStyle","pos","position","backgroundColor","borderRadius","zIndex","color","fontSize","textTransform","letterSpacing","fontWeight","closeDropdown","selectMode","handleButtonClick","handleModalSave","updatedData","sendAggregatedData","time","timeEnd","performance","toFixed","class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","src","_imports_0","alt","href","render","showWiFi","showSettings","showUpdate","toggleWiFiModal","toggleUpdateModal","toggleSettingsModal","createApp","App","mount","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","definition","defineProperty","enumerable","get","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}